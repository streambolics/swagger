openapi: 3.0.1
info:
  title: -Should be set by runtime-
  description: LabX API specification.
  version: 1.0.0
servers:
  - url: https://api.verval.di-labx.com
  - url: https://api.int.di-labx.com
  - url: https://api.dev.di-labx.com
paths:
  '/auth':
    post:
      description: |
        Log-on to LabX. Copy the returned token in the authorization box
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userName:
                  type: string
                  example: 'someone@somewhere.com'
                password:
                  type: string
                  example: 'PaSsWoRd01'
      responses:
        "200":
          description: |
            Successful operation. The token should be copied to authorization
          content:
            application/json:
              schema:
                type: object
                properties:
                  access:
                    type: string
                  token:
                    type: string
  '/api/resource/1.0/resources':
    post:
      security:
        - Authorization: []
      description: |
        Creates a new Resource object.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Resource"
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    $ref: "#/components/schemas/Resource"
        "401":
          description: |
            Access token is missing or invalid
    get:
      security:
        - Authorization: []
      description: |
        Retrieves a list of Resource objects.
        <br/><b>Notes:</b><ul>
        <li>The returned list does not contain objects marked as hidden. To include those objects in the list, use the <tt>includehidden</tt> option in the parameters.</li>
        <li>The returned list of objects is subject to pagination.</li>
        </ul>
      parameters:
      - name: "includehidden"
        in: "query"
        required: false
        description: |
          Whether to include hidden objects in the returned set.
          <br/><b>Notes:</b><ul>
          <li>When absent, the returned object list does not contain objects marked as hidden.</li>
          </ul>
        schema:
          type: boolean
      - name: "page"
        in: "query"
        required: false
        description: |
          The page number. Combined with the <tt>pagesize</tt> parameter, this defines the range of objects returned.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters.</li>
          <li>To iterate through items, increase the page number until the returned set is empty</li>
          </ul>
        schema:
          type: integer
          format: int64
          default: 0
          minimum: 0
      - name: "pagesize"
        in: "query"
        required: false
        description: |
          The page size. Combined with the <tt>page</tt> parameter, this defines the range of objects returned.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters.</li>
          </ul>
        schema:
          type: integer
          format: int64
          default: 20
          minimum: 1
      - name: "first"
        in: "query"
        required: false
        description: |
          The index of the first item to return.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters.</li>
          </ul>
        schema:
          type: integer
          format: int64
      - name: "last"
        in: "query"
        required: false
        description: |
          The index + 1 of the last item to return.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters.</li>
          <li>Bear in mind that this is not the index of the last item to return, but the index <b>following</b> the last item to return.</li>
          </ul>
        schema:
          type: integer
          format: int64
      - name: "kind"
        in: "query"
        required: false
        description: |
          The GUID of a ResourceKind object. Only Resource objects having this value as kind are selected.
          <br/><b>Notes:</b><ul>
          <li>This parameter acts as a filter, and combines with other filters. Only Resource objects matching all filters are selected.</li>
          </ul>
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/Resource"
        "401":
          description: |
            Access token is missing or invalid
  '/api/resource/1.0/resources/{id}':
    get:
      security:
        - Authorization: []
      description: |
        Gets a single TBD
        <br/><b>Notes:</b><ul>
        <li>The object is returned even if it is hidden.</li>
        </ul>
      parameters:
      - name: "id"
        in: "path"
        required: true
        description: |
          The internal Id of the TBD
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 204
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    example: null
        "401":
          description: |
            Access token is missing or invalid
    delete:
      security:
        - Authorization: []
      description: |
        Removes the TBD object.
        <br/><b>Notes:</b><ul>
        <li>This does not actually delete the object from the database, as it may be needed for historical reasons.
        Instead, the <tt>hidden</tt> property of the object is set to <tt>true</tt>.</li>
        <li>It is possible to <i>undelete</i> an object by issuing a <tt>put</tt> query to set the
        <tt>hidden</tt> property back to <tt>false</tt>.</li>
        </ul>
      parameters:
      - name: "reason"
        in: "query"
        required: false
        description: |
          <b>Warning</b>: This feature is currently experimental and should not be used in production<br/>
          The unique ID of the reason why the resource is deleted.
          <br/><b>Notes:</b><ul>
          <li>This is equivalent to including the `hiddenreason` parameter to a PUT query.</li>
          </ul>
        schema:
          type: string
          format: guid
      - name: "id"
        in: "path"
        required: true
        description: |
          The internal Id of the TBD
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 204
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    example: null
        "401":
          description: |
            Access token is missing or invalid
    put:
      security:
        - Authorization: []
      description: |
        Updates selected properties of the TBD object.
        <br/><b>Notes:</b><ul>
        <li>This query updates the fields explicitly present in the body. All fields absent from the body keep their existing value.</li>
        <li>The id parameter <i>may</i> be present in the body, but it must match the existing id. It is not possible to change the unique ID of an object.</li>
        </ul>
      parameters:
      - name: "id"
        in: "path"
        required: true
        description: |
          The internal Id of the TBD
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 204
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    example: null
        "401":
          description: |
            Access token is missing or invalid
  '/api/resource/1.0/resourcelinkkinds':
    post:
      security:
        - Authorization: []
      description: |
        Creates a new ResourceLinkKind object.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResourceLinkKind"
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    $ref: "#/components/schemas/ResourceLinkKind"
        "401":
          description: |
            Access token is missing or invalid
    get:
      security:
        - Authorization: []
      description: |
        Retrieves a list of ResourceLinkKind objects.
        <br/><b>Notes:</b><ul>
        <li>The returned list does not contain objects marked as hidden. To include those objects in the list, use the <tt>includehidden</tt> option in the parameters.</li>
        <li>The returned list of objects is subject to pagination.</li>
        </ul>
      parameters:
      - name: "includehidden"
        in: "query"
        required: false
        description: |
          Whether to include hidden objects in the returned set.
          <br/><b>Notes:</b><ul>
          <li>When absent, the returned object list does not contain objects marked as hidden.</li>
          </ul>
        schema:
          type: boolean
      - name: "page"
        in: "query"
        required: false
        description: |
          The page number. Combined with the <tt>pagesize</tt> parameter, this defines the range of objects returned.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters.</li>
          <li>To iterate through items, increase the page number until the returned set is empty</li>
          </ul>
        schema:
          type: integer
          format: int64
          default: 0
          minimum: 0
      - name: "pagesize"
        in: "query"
        required: false
        description: |
          The page size. Combined with the <tt>page</tt> parameter, this defines the range of objects returned.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters.</li>
          </ul>
        schema:
          type: integer
          format: int64
          default: 20
          minimum: 1
      - name: "first"
        in: "query"
        required: false
        description: |
          The index of the first item to return.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters.</li>
          </ul>
        schema:
          type: integer
          format: int64
      - name: "last"
        in: "query"
        required: false
        description: |
          The index + 1 of the last item to return.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters.</li>
          <li>Bear in mind that this is not the index of the last item to return, but the index <b>following</b> the last item to return.</li>
          </ul>
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/ResourceLinkKind"
        "401":
          description: |
            Access token is missing or invalid
  '/api/resource/1.0/resourcelinkkinds/{id}':
    get:
      security:
        - Authorization: []
      description: |
        Gets a single TBD
        <br/><b>Notes:</b><ul>
        <li>The object is returned even if it is hidden.</li>
        </ul>
      parameters:
      - name: "id"
        in: "path"
        required: true
        description: |
          The internal Id of the TBD
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 204
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    example: null
        "401":
          description: |
            Access token is missing or invalid
    delete:
      security:
        - Authorization: []
      description: |
        Removes the TBD object.
        <br/><b>Notes:</b><ul>
        <li>This does not actually delete the object from the database, as it may be needed for historical reasons.
        Instead, the <tt>hidden</tt> property of the object is set to <tt>true</tt>.</li>
        <li>It is possible to <i>undelete</i> an object by issuing a <tt>put</tt> query to set the
        <tt>hidden</tt> property back to <tt>false</tt>.</li>
        </ul>
      parameters:
      - name: "id"
        in: "path"
        required: true
        description: |
          The internal Id of the TBD
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 204
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    example: null
        "401":
          description: |
            Access token is missing or invalid
    put:
      security:
        - Authorization: []
      description: |
        Updates selected properties of the TBD object.
        <br/><b>Notes:</b><ul>
        <li>This query updates the fields explicitly present in the body. All fields absent from the body keep their existing value.</li>
        <li>The id parameter <i>may</i> be present in the body, but it must match the existing id. It is not possible to change the unique ID of an object.</li>
        </ul>
      parameters:
      - name: "id"
        in: "path"
        required: true
        description: |
          The internal Id of the TBD
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 204
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    example: null
        "401":
          description: |
            Access token is missing or invalid
  '/api/resource/1.0/resourcekinds':
    post:
      security:
        - Authorization: []
      description: |
        Creates a new ResourceKind object.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResourceKind"
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    $ref: "#/components/schemas/ResourceKind"
        "401":
          description: |
            Access token is missing or invalid
    get:
      security:
        - Authorization: []
      description: |
        Retrieves a list of ResourceKind objects.
        <br/><b>Notes:</b><ul>
        <li>The returned list does not contain objects marked as hidden. To include those objects in the list, use the <tt>includehidden</tt> option in the parameters.</li>
        <li>The returned list of objects is subject to pagination.</li>
        </ul>
      parameters:
      - name: "includehidden"
        in: "query"
        required: false
        description: |
          Whether to include hidden objects in the returned set.
          <br/><b>Notes:</b><ul>
          <li>When absent, the returned object list does not contain objects marked as hidden.</li>
          </ul>
        schema:
          type: boolean
      - name: "page"
        in: "query"
        required: false
        description: |
          The page number. Combined with the <tt>pagesize</tt> parameter, this defines the range of objects returned.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters.</li>
          <li>To iterate through items, increase the page number until the returned set is empty</li>
          </ul>
        schema:
          type: integer
          format: int64
          default: 0
          minimum: 0
      - name: "pagesize"
        in: "query"
        required: false
        description: |
          The page size. Combined with the <tt>page</tt> parameter, this defines the range of objects returned.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters.</li>
          </ul>
        schema:
          type: integer
          format: int64
          default: 20
          minimum: 1
      - name: "first"
        in: "query"
        required: false
        description: |
          The index of the first item to return.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters.</li>
          </ul>
        schema:
          type: integer
          format: int64
      - name: "last"
        in: "query"
        required: false
        description: |
          The index + 1 of the last item to return.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters.</li>
          <li>Bear in mind that this is not the index of the last item to return, but the index <b>following</b> the last item to return.</li>
          </ul>
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/ResourceKind"
        "401":
          description: |
            Access token is missing or invalid
  '/api/resource/1.0/resourcekinds/{id}':
    get:
      security:
        - Authorization: []
      description: |
        Gets a single TBD
        <br/><b>Notes:</b><ul>
        <li>The object is returned even if it is hidden.</li>
        </ul>
      parameters:
      - name: "id"
        in: "path"
        required: true
        description: |
          The internal Id of the TBD
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 204
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    example: null
        "401":
          description: |
            Access token is missing or invalid
    delete:
      security:
        - Authorization: []
      description: |
        Removes the TBD object.
        <br/><b>Notes:</b><ul>
        <li>This does not actually delete the object from the database, as it may be needed for historical reasons.
        Instead, the <tt>hidden</tt> property of the object is set to <tt>true</tt>.</li>
        <li>It is possible to <i>undelete</i> an object by issuing a <tt>put</tt> query to set the
        <tt>hidden</tt> property back to <tt>false</tt>.</li>
        </ul>
      parameters:
      - name: "id"
        in: "path"
        required: true
        description: |
          The internal Id of the TBD
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 204
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    example: null
        "401":
          description: |
            Access token is missing or invalid
    put:
      security:
        - Authorization: []
      description: |
        Updates selected properties of the TBD object.
        <br/><b>Notes:</b><ul>
        <li>This query updates the fields explicitly present in the body. All fields absent from the body keep their existing value.</li>
        <li>The id parameter <i>may</i> be present in the body, but it must match the existing id. It is not possible to change the unique ID of an object.</li>
        </ul>
      parameters:
      - name: "id"
        in: "path"
        required: true
        description: |
          The internal Id of the TBD
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 204
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    example: null
        "401":
          description: |
            Access token is missing or invalid
  '/api/resource/1.0/resources/{id}/masters':
    get:
      security:
        - Authorization: []
      description: |
        The list of masters of a given resource.
        <br/><b>Notes:</b><ul>
        <li>The returned list of objects is subject to pagination.</li>
        <li>The returned list does not contain objects marked as hidden. To include those objects in the list, use the <tt>includehidden</tt> option in the parameters.</li>
        </ul>
      parameters:
      - name: "kind"
        in: "query"
        required: false
        description: |
          A comma-separated list of GUID of ResourceKind objects. Only TBD objects having one of these values as kind are selected.
          <br/><b>Notes:</b><ul>
          <li>This parameter acts as a filter, and combines with other filters. Only TBD objects matching all filters are selected.</li>
          </ul>
        schema:
          type: string
          format: guid
      - name: "linkkind"
        in: "query"
        required: false
        description: |
          A comma-separated list of GUID of ResourceLinkKind objects. Only TBD objects having one of these values as linkkind are selected.
          <br/><b>Notes:</b><ul>
          <li>This parameter acts as a filter, and combines with other filters. Only TBD objects matching all filters are selected.</li>
          </ul>
        schema:
          type: string
          format: guid
      - name: "page"
        in: "query"
        required: false
        description: |
          The page number. Combined with the <tt>pagesize</tt> parameter, this defines the range of objects returned.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters.</li>
          <li>To iterate through items, increase the page number until the returned set is empty</li>
          </ul>
        schema:
          type: integer
          format: int64
          default: 0
          minimum: 0
      - name: "pagesize"
        in: "query"
        required: false
        description: |
          The page size. Combined with the <tt>page</tt> parameter, this defines the range of objects returned.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters.</li>
          </ul>
        schema:
          type: integer
          format: int64
          default: 20
          minimum: 1
      - name: "first"
        in: "query"
        required: false
        description: |
          The index of the first item to return.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters.</li>
          </ul>
        schema:
          type: integer
          format: int64
      - name: "last"
        in: "query"
        required: false
        description: |
          The index + 1 of the last item to return.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters.</li>
          <li>Bear in mind that this is not the index of the last item to return, but the index <b>following</b> the last item to return.</li>
          </ul>
        schema:
          type: integer
          format: int64
      - name: "includehidden"
        in: "query"
        required: false
        description: |
          Whether to include hidden objects in the returned set.
          <br/><b>Notes:</b><ul>
          <li>When absent, the returned object list does not contain objects marked as hidden.</li>
          </ul>
        schema:
          type: boolean
      - name: "id"
        in: "path"
        required: true
        description: |
          The GUID of the resource acting as element in the relation.
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 204
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    example: null
        "401":
          description: |
            Access token is missing or invalid
  '/api/resource/1.0/resources/{id}/elements':
    get:
      security:
        - Authorization: []
      description: |
        The list of elements of a given resource.
        <br/><b>Notes:</b><ul>
        <li>The returned list of objects is subject to pagination.</li>
        <li>The returned list does not contain objects marked as hidden. To include those objects in the list, use the <tt>includehidden</tt> option in the parameters.</li>
        </ul>
      parameters:
      - name: "kind"
        in: "query"
        required: false
        description: |
          A comma-separated list of GUID of ResourceKind objects. Only TBD objects having one of these values as kind are selected.
          <br/><b>Notes:</b><ul>
          <li>This parameter acts as a filter, and combines with other filters. Only TBD objects matching all filters are selected.</li>
          </ul>
        schema:
          type: string
          format: guid
      - name: "linkkind"
        in: "query"
        required: false
        description: |
          A comma-separated list of GUID of ResourceLinkKind objects. Only TBD objects having one of these values as linkkind are selected.
          <br/><b>Notes:</b><ul>
          <li>This parameter acts as a filter, and combines with other filters. Only TBD objects matching all filters are selected.</li>
          </ul>
        schema:
          type: string
          format: guid
      - name: "page"
        in: "query"
        required: false
        description: |
          The page number. Combined with the <tt>pagesize</tt> parameter, this defines the range of objects returned.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters.</li>
          <li>To iterate through items, increase the page number until the returned set is empty</li>
          </ul>
        schema:
          type: integer
          format: int64
          default: 0
          minimum: 0
      - name: "pagesize"
        in: "query"
        required: false
        description: |
          The page size. Combined with the <tt>page</tt> parameter, this defines the range of objects returned.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters.</li>
          </ul>
        schema:
          type: integer
          format: int64
          default: 20
          minimum: 1
      - name: "first"
        in: "query"
        required: false
        description: |
          The index of the first item to return.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters.</li>
          </ul>
        schema:
          type: integer
          format: int64
      - name: "last"
        in: "query"
        required: false
        description: |
          The index + 1 of the last item to return.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters.</li>
          <li>Bear in mind that this is not the index of the last item to return, but the index <b>following</b> the last item to return.</li>
          </ul>
        schema:
          type: integer
          format: int64
      - name: "includehidden"
        in: "query"
        required: false
        description: |
          Whether to include hidden objects in the returned set.
          <br/><b>Notes:</b><ul>
          <li>When absent, the returned object list does not contain objects marked as hidden.</li>
          </ul>
        schema:
          type: boolean
      - name: "id"
        in: "path"
        required: true
        description: |
          The GUID of the resource acting as master in the relation.
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 204
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    example: null
        "401":
          description: |
            Access token is missing or invalid
  '/api/resource/1.0/resources/{id}/links':
    post:
      security:
        - Authorization: []
      description: |
        Adds a link from the master to an element.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResourceLink"
      parameters:
      - name: "id"
        in: "path"
        required: true
        description: |
          The GUID of the resource acting as master in the relation.
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 204
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    example: null
        "401":
          description: |
            Access token is missing or invalid
    delete:
      security:
        - Authorization: []
      description: |
        Deletes one or more links from a master. All links that pass the filter are removed.
        <br/><b>Notes:</b><ul>
        <li>Great care must be taken to precisely filter the links to be deleted.
        Failure to provide specific filters may result in deleting more links than expected.</li>
        </ul>
      parameters:
      - name: "kind"
        in: "query"
        required: false
        description: |
          The GUID of a ResourceLinkKind object. Only TBD objects having this value as kind are selected.
          <br/><b>Notes:</b><ul>
          <li>This parameter acts as a filter, and combines with other filters. Only TBD objects matching all filters are selected.</li>
          </ul>
        schema:
          type: string
          format: guid
      - name: "element"
        in: "query"
        required: false
        description: |
          The GUID of a Resource object. Only TBD objects having this value as element are selected.
          <br/><b>Notes:</b><ul>
          <li>This parameter acts as a filter, and combines with other filters. Only TBD objects matching all filters are selected.</li>
          </ul>
        schema:
          type: string
          format: guid
      - name: "id"
        in: "path"
        required: true
        description: |
          The GUID of the resource acting as master in the relation.
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 204
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    example: null
        "401":
          description: |
            Access token is missing or invalid
  '/api/resource/1.0/middlewares/{uniqueid}':
    get:
      security:
        - Authorization: []
      description: |
        get
      parameters:
      - name: "uniqueid"
        in: "path"
        required: true
        description: |
          A user-defined unique name.
          <br/><b>Notes:</b><ul>
          <li>Unique names are user defined, they do not need to be UUIDs.</li>
          <li>It is the client responsibility to ensure  that names are kept unique, and that the same name is always used to refer to the same item.</li>
          </ul>
        schema:
          type: string
      - name: "autocreate"
        in: "query"
        required: true
        description: |
          Whether to auto-synchronize the cloud definition.
          <br/><b>Notes:</b><ul>
          <li>If the autocreate option is not set, issuing a GET for the given unique code returns a 404 if the resource was never synchronized before.</li>
          <li>It is recommended to set this field to true only when the query is performed by the client that is responsible for synchronizing the resource. Othe clients should leave this field to false, in order to avoid updating a resource that they do not own.</li>
          </ul>
        schema:
          type: boolean
      - name: "displayname"
        in: "query"
        required: true
        description: |
          The display name that is used as the name of the resource during synchronization.
          <br/><b>Notes:</b><ul>
          <li>This field is ignored if autocreate is false</li>
          </ul>
        schema:
          type: string
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    $ref: "#/components/schemas/Resource"
        "401":
          description: |
            Access token is missing or invalid
  '/api/resource/1.0/imconnections':
    get:
      security:
        - Authorization: []
      description: |
        get
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/ImConnection"
        "401":
          description: |
            Access token is missing or invalid
  '/api/resource/1.0/imconnections/{id}':
    get:
      security:
        - Authorization: []
      description: |
        Retrieve additional information about an IM connection
        <br/><b>Notes:</b><ul>
        <li>It is expected that IM information has been setup by a PUT query.</li>
        <li>It is legal to retrieve the IM information for a connection that has not be the target of a PUT query. In that case, most of the fields returned by this query will be empty.</li>
        </ul>
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    $ref: "#/components/schemas/ImConnection"
        "401":
          description: |
            Access token is missing or invalid
    put:
      security:
        - Authorization: []
      description: |
        Update the IM information about a connection.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImConnection"
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 204
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    example: null
        "401":
          description: |
            Access token is missing or invalid
components:
  securitySchemes:
    Authorization:
      description: |
        Enter here the value of the <tt>token</tt> field that you received from a valid /auth call
      type: apiKey
      in: header
      name: Authorization
  schemas:
    Resource:
      type: object
      description: |
        A resource describes a piece of equipment, people, or an organizational unit that plays a role in the
        execution of the tasks in the laboratory.
        <br>
        Each resource has a kind that further describes its role. The LabX system attaches special meaning to the predefined resource kinds,
        but the user is free to create additional custom kinds to suit the lab's needs.
      properties:
        id:
          description: |
            The internal ID of the Definition.
            Once attributed, the internal ID can no longer be changed.
            <br/><b>Notes:</b><ul>
            <li>When specified during a PUT, the field value must match the ID passed in the URL</li>
            </ul>
        name:
          description: |
            A descriptive name for the Definition.
            The name should be descriptive and specific enough for a user to quickly identify the
            Definition referred to by that entry.
            <br/><b>Notes:</b><ul>
            <li>Two entries may have the same name.</li>
            <li>Changing the name of an entry does not alter its identity.</li>
            <li>There is no limit to the size of a name, but this should not typically exceed 50 characters.</li>
            </ul>
        hidden:
          description: |
            Whether this Definition has been hidden.
            <br/><b>Notes:</b><ul>
            <li>An entry with its <tt>hidden</tt> property set to true will no longer be returned in lists.
            It can still be referenced explicitly.</li>
            <li>As there are no way of deleting a definition from the database (as it may be needed for historical purposes)
            setting the <tt>hidden</tt> property to true is the recommended way of <i>deleting</i> a definition.</li>
            </ul>
        kind:
          description: |
            The UUID of a ResourceKind that acts as the resource kind
    ResourceKind:
      type: object
      description: |
        ResourceKind
      properties:
        id:
          description: |
            The internal ID of the Definition.
            Once attributed, the internal ID can no longer be changed.
            <br/><b>Notes:</b><ul>
            <li>When specified during a PUT, the field value must match the ID passed in the URL</li>
            </ul>
        name:
          description: |
            A descriptive name for the Definition.
            The name should be descriptive and specific enough for a user to quickly identify the
            Definition referred to by that entry.
            <br/><b>Notes:</b><ul>
            <li>Two entries may have the same name.</li>
            <li>Changing the name of an entry does not alter its identity.</li>
            <li>There is no limit to the size of a name, but this should not typically exceed 50 characters.</li>
            </ul>
        hidden:
          description: |
            Whether this Definition has been hidden.
            <br/><b>Notes:</b><ul>
            <li>An entry with its <tt>hidden</tt> property set to true will no longer be returned in lists.
            It can still be referenced explicitly.</li>
            <li>As there are no way of deleting a definition from the database (as it may be needed for historical purposes)
            setting the <tt>hidden</tt> property to true is the recommended way of <i>deleting</i> a definition.</li>
            </ul>
    ResourceLinkKind:
      type: object
      description: |
        ResourceLinkKind
      properties:
        id:
          description: |
            The internal ID of the Definition.
            Once attributed, the internal ID can no longer be changed.
            <br/><b>Notes:</b><ul>
            <li>When specified during a PUT, the field value must match the ID passed in the URL</li>
            </ul>
        name:
          description: |
            A descriptive name for the Definition.
            The name should be descriptive and specific enough for a user to quickly identify the
            Definition referred to by that entry.
            <br/><b>Notes:</b><ul>
            <li>Two entries may have the same name.</li>
            <li>Changing the name of an entry does not alter its identity.</li>
            <li>There is no limit to the size of a name, but this should not typically exceed 50 characters.</li>
            </ul>
        hidden:
          description: |
            Whether this Definition has been hidden.
            <br/><b>Notes:</b><ul>
            <li>An entry with its <tt>hidden</tt> property set to true will no longer be returned in lists.
            It can still be referenced explicitly.</li>
            <li>As there are no way of deleting a definition from the database (as it may be needed for historical purposes)
            setting the <tt>hidden</tt> property to true is the recommended way of <i>deleting</i> a definition.</li>
            </ul>
    ResourceLink:
      type: object
      description: |
        A relation between a master resource and an element resource. The relation is further described with a kind.
        <br>
        Relations link resources in hierarchical dependencies and can be freely created and removed. The LabX system attaches special meaning
        to the predefined link kinds, but the user is free to create additional custom kinds to suit the lab's needs.
      properties:
        kind:
          description: |
            The UUID of a ResourceLinkKind that acts as the kind of relation between the master and the element
        master:
          description: |
            The UUID of a Resource that acts as the master (ie owner) in the relation
            <br/><b>Notes:</b><ul>
            <li>When used in a POST query, this field must either match the <tt>id</tt> parameter in the path, or be absent.</li>
            </ul>
        element:
          description: |
            The UUID of a Resource that acts as the element (ie content) in the relation
    ImConnection:
      type: object
      description: |
        Additional, IM-specific information about a ressource that acts as a connection.
      properties:
        id:
          description: |
            The internal ID of the connection object.
            <br/><b>Notes:</b><ul>
            <li>This field is read only. It will be ignored in a PUT or a POST query.</li>
            </ul>
        name:
          description: |
            The name of the connection. This field is retrieved from the name of the corresponding resource.
            <br/><b>Notes:</b><ul>
            <li>This field is read only. It will be ignored in a PUT or a POST query.</li>
            </ul>
        code:
          description: |
            The code of the connection, typically in the form CN-xxxx
            <br/><b>Notes:</b><ul>
            <li>This field is read only. It will be ignored in a PUT or a POST query.</li>
            <li>This field is retrieved from the systematic name of the corresponding resource.</li>
            </ul>
        instrumentnumber:
          description: |
            The instrument number.
            <br/><b>Notes:</b><ul>
            <li>This field is read only. It will be ignored in a PUT or a POST query.</li>
            <li>This field is read-only and only retrieved if the code is CN- followed by a number.</li>
            </ul>
        systemconnection:
          description: |
            Whether this is a system connection.
            <br/><b>Notes:</b><ul>
            <li>This field is read only. It will be ignored in a PUT or a POST query.</li>
            <li>The value is derived from instrumentnumber</li>
            </ul>
        connectiontype:
          description: |
            The type of connection.
            <br/><b>Notes:</b><ul>
            <li>This field is read only. It will be ignored in a PUT or a POST query.</li>
            <li>The value is derived from `systemconnection`.</li>
            </ul>
        site:
          description: |
            The internal ID of the resource representing the site.
            <br/><b>Notes:</b><ul>
            <li>This field is read only. It will be ignored in a PUT or a POST query.</li>
            <li>This resource can be used as a connection group.</li>
            </ul>
        sitecode:
          description: |
            The code for the site.
        sitename:
          description: |
            The name of the site.
            <br/><b>Notes:</b><ul>
            <li>This field is ignored in a PUT if no `sitecode` is given.</li>
            <li>If this field is not specified, it defaults to `sitecode`.</li>
            </ul>
        location:
          description: |
            The internal ID of the resource representing the location.
            <br/><b>Notes:</b><ul>
            <li>This field is read only. It will be ignored in a PUT or a POST query.</li>
            <li>This resource can be used as a connection group.</li>
            </ul>
        locationcode:
          description: |
            The code for the location.
        locationname:
          description: |
            The name of the location.
            <br/><b>Notes:</b><ul>
            <li>This field is ignored in a PUT if no `locationcode` is given.</li>
            <li>If the field is not specified, it defaults to `locationcode`.</li>
            </ul>
        configuration:
          description: |
            The internal ID of the resource representing the configuration.
            <br/><b>Notes:</b><ul>
            <li>This field is read only. It will be ignored in a PUT or a POST query.</li>
            <li>This resource can be used as a connection group.</li>
            </ul>
        configurationcode:
          description: |
            The code for the configuration, typically in the form of CF-xxxx.
        configurationname:
          description: |
            The name of the configuration.
            <br/><b>Notes:</b><ul>
            <li>This field is ignored in a PUT if no `configurationcode` is given.</li>
            </ul>
        driver:
          description: |
            The internal ID of the resource representing the driver and its version.
            <br/><b>Notes:</b><ul>
            <li>This field is read only. It will be ignored in a PUT or a POST query.</li>
            <li>This resource can be used as a connection group.</li>
            </ul>
        drivercode:
          description: |
            The code for the driver.
        drivername:
          description: |
            The name of the driver
        driverversion:
          description: |
            The name of the driver with its version.
        drivertypecode:
          description: |
            The code for the driver type. This is a single character, and is derived from drivercode.
            <br/><b>Notes:</b><ul>
            <li>This field is read only. It will be ignored in a PUT or a POST query.</li>
            </ul>
        drivertypename:
          description: |
            The name for the driver type. This is derived from drivertypecode.
            <br/><b>Notes:</b><ul>
            <li>This field is read only. It will be ignored in a PUT or a POST query.</li>
            </ul>
