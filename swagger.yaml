openapi: 3.0.1
info:
  title: LabX API specification
  description: This document contains the externally accessible API endpoints for the LabX Cloud Backend.
  version: 1.0.0
externalDocs:
  description: Cross-reference of all Resource Kinds, Kpi Kinds, etc.
  url: 'http://website-di-labx-documentation.s3-website.us-east-2.amazonaws.com/'
servers:
  - url: https://api.verval.di-labx.com
  - url: https://api.int.di-labx.com
  - url: https://api.dev.di-labx.com
tags:
  - name: interop
    description: |
      Miscellaneous Interop calls for Docker.
  - name: definition
    description: |
      Definitions are setup by the administrator to represent the configuration
      of the site. Definitions are not meant to change very often, and are accessed with a CRUD API.
  - name: realtime
    description: |
      Real-time data. These include metrics uploaded by edge 
  - name: resource
    description: |
      Resources representing equipment and processes in the lab.
  - name: kpi
    description: |
      Key Performance Indicators
  - name: metric
    description: |
      Real-time metrics
  - name: logging
    description: |
      Real-time logging
paths:
  '/auth':
    post:
      tags:
      - interop
      description: |
        Log-on to LabX. Copy the returned token in the authorization box
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userName:
                  type: string
                  example: 'someone@somewhere.com'
                password:
                  type: string
                  example: 'PaSsWoRd01'
      responses:
        "200":
          description: |
            Successful operation. The token should be copied to authorization
          content:
            application/json:
              schema:
                type: object
                properties:
                  access:
                    type: string
                  token:
                    type: string
  '/api/kpi/1.0/currentvalues':
    get:
      security:
        - Authorization: []
      tags:
      - kpi
      - realtime
      description: |
        Obtain the current value of a set of KPIs
      parameters:
      - name: "recompute"
        in: "query"
        required: false
        description: |
          Force the recomputation of the KPI value
          <br/><b>Notes:</b><ul>
          <li>When true, the KPI values are always recomputed.</li>
          <li>When false, the KPI values are never recomputed.</li>
          <li>When absent, KPI values are recomputed when their refresh time has been reached</li>
          <li>This option applies to all KPIs selected by the query</li>
          </ul>
        schema:
          type: boolean
      - name: "wait"
        in: "query"
        required: false
        description: |
          The total amount of milliseconds the query should wait for KPIs to be recomputed.
          <br/><b>Notes:</b><ul>
          <li>The default is not to wait</li>
          <li>When specified, and some KPIs need to be recomputed, the query will wait up to that duration for computations to complete</li>
          <li>When the time has elapsed, KPIs that are noy yet recomputed are returned with their previous value (which may still be valid)</li>
          <li>The query returns as soon as all KPIs are recomputed, or the timeout elapses, whichever occurs first.</li>
          <li>This option applies to all KPIs selected by the query</li>
          </ul>
        schema:
          type: integer
          format: int64
      - name: "resource"
        in: "query"
        required: false
        description: |
          A comma-separated list of GUID of Resource objects. Only KpiValue objects having one of these values as resource are selected.
          <br/><b>Notes:</b><ul>
          <li>This parameter acts as a filter, and combines with other filters. Only KpiValue objects matching all filters are selected.</li>
          </ul>
        schema:
          type: string
          format: guid
      - name: "kind"
        in: "query"
        required: false
        description: |
          A comma-separated list of GUID of KPI Kind objects. Only KpiValue objects having one of these values as kind are selected.
          <br/><b>Notes:</b><ul>
          <li>This parameter acts as a filter, and combines with other filters. Only KpiValue objects matching all filters are selected.</li>
          </ul>
        schema:
          type: string
          format: guid
      - name: "id"
        in: "query"
        required: false
        description: |
          A comma-separated list of GUID of KPI objects. Only KpiValue objects having one of these values as id are selected.
          <br/><b>Notes:</b><ul>
          <li>This parameter acts as a filter, and combines with other filters. Only KpiValue objects matching all filters are selected.</li>
          </ul>
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/KpiValue"
        "401":
          description: |
            Access token is missing or invalid
  '/api/kpi/1.0/currentvalues/{id}':
    get:
      security:
        - Authorization: []
      tags:
      - kpi
      - realtime
      description: |
        Obtain the current value of a KPI
      parameters:
      - name: "recompute"
        in: "query"
        required: false
        description: |
          Force the recomputation of the KPI value
          <br/><b>Notes:</b><ul>
          <li>When true, the KPI values are always recomputed.</li>
          <li>When false, the KPI values are never recomputed.</li>
          <li>When absent, KPI values are recomputed when their refresh time has been reached</li>
          </ul>
        schema:
          type: boolean
      - name: "wait"
        in: "query"
        required: false
        description: |
          The total amount of milliseconds the query should wait for KPIs to be recomputed.
          <br/><b>Notes:</b><ul>
          <li>The default is not to wait</li>
          <li>When specified, and some KPIs need to be recomputed, the query will wait up to that duration for computations to complete</li>
          <li>When the time has elapsed, KPIs that are noy yet recomputed are returned with their previous value (which may still be valid)</li>
          <li>The query returns as soon as all KPIs are recomputed, or the timeout elapses, whichever occurs first.</li>
          </ul>
        schema:
          type: integer
          format: int64
      - name: "id"
        in: "path"
        required: true
        description: |
          id
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    $ref: "#/components/schemas/KpiValue"
        "401":
          description: |
            Access token is missing or invalid
    put:
      security:
        - Authorization: []
      tags:
      - kpi
      - realtime
      description: |
        Change the current value of a KPI
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KpiValue"
      parameters:
      - name: "id"
        in: "path"
        required: true
        description: |
          id
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 204
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    example: null
        "401":
          description: |
            Access token is missing or invalid
  '/api/kpi/1.0/kpikinds':
    post:
      security:
        - Authorization: []
      tags:
      - definition
      - kpi
      description: |
        Creates a new KpiKind object.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KpiKind"
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    $ref: "#/components/schemas/KpiKind"
        "401":
          description: |
            Access token is missing or invalid
    get:
      security:
        - Authorization: []
      tags:
      - definition
      - kpi
      description: |
        Retrieves a list of KpiKind objects.
        <br/><b>Notes:</b><ul>
        <li>The returned list does not contain objects marked as hidden. To include those objects in the list, use the <tt>includehidden</tt> option in the parameters.</li>
        <li>The returned list of objects is subject to pagination.
        Pagination ensures that a query does not return an unexpectedly large data set.
        It is recommended to adapt the size of individual pages according to the expected size of the dataset.
        Making a single large query is usuall more efficient than making several small ones.</li>
        </ul>
      parameters:
      - name: "includehidden"
        in: "query"
        required: false
        description: |
          Whether to include hidden objects in the returned set.
          <br/><b>Notes:</b><ul>
          <li>When absent, the returned object list does not contain objects marked as hidden.</li>
          </ul>
        schema:
          type: boolean
      - name: "page"
        in: "query"
        required: false
        description: |
          The page number. Combined with the <tt>pagesize</tt> parameter, this defines the range of objects returned.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          <li>To iterate through items, increase the page number until the returned set is empty</li>
          </ul>
        schema:
          type: integer
          format: int64
          default: 0
          minimum: 0
      - name: "pagesize"
        in: "query"
        required: false
        description: |
          The page size. Combined with the <tt>page</tt> parameter, this defines the range of objects returned.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          </ul>
        schema:
          type: integer
          format: int64
          default: 20
          minimum: 1
      - name: "first"
        in: "query"
        required: false
        description: |
          The index of the first item to return.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          </ul>
        schema:
          type: integer
          format: int64
      - name: "last"
        in: "query"
        required: false
        description: |
          The index + 1 of the last item to return, when using the <tt>first</tt>/<tt>last</tt> combination.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          <li>Bear in mind that this is not the index of the last item to return, but the index <b>following</b> the last item to return.</li>
          <li>The <tt>last</tt> parameter is ignored if the <tt>first</tt> parameter is not given.</li>
          <li>The query will return at most <tt>last</tt> - <tt>first</tt> items.
          If the <tt>last</tt> parameter is not given, at most <tt>pagesize</tt> items will be returned.
          It is not recommended to leave <tt>last</tt> parameter unspecified.</li>
          <li>The behavior when <tt>last</tt> is less or equal to <tt>first</tt> is not specified, and subject to change.</li>
          </ul>
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/KpiKind"
        "401":
          description: |
            Access token is missing or invalid
  '/api/kpi/1.0/kpikinds/{id}':
    get:
      security:
        - Authorization: []
      tags:
      - definition
      - kpi
      description: |
        Gets a single KpiKind
        <br/><b>Notes:</b><ul>
        <li>The object is returned even if it is hidden.</li>
        </ul>
      parameters:
      - name: "id"
        in: "path"
        required: true
        description: |
          The internal Id of the KpiKind
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    $ref: "#/components/schemas/KpiKind"
        "401":
          description: |
            Access token is missing or invalid
    delete:
      security:
        - Authorization: []
      tags:
      - definition
      - kpi
      description: |
        Removes the KpiKind object.
        <br/><b>Notes:</b><ul>
        <li>This does not actually delete the object from the database, as it may be needed for historical reasons.
        Instead, the <tt>hidden</tt> property of the object is set to <tt>true</tt>.</li>
        <li>It is possible to <i>undelete</i> an object by issuing a <tt>put</tt> query to set the
        <tt>hidden</tt> property back to <tt>false</tt>.</li>
        </ul>
      parameters:
      - name: "id"
        in: "path"
        required: true
        description: |
          The internal Id of the KpiKind
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 204
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    example: null
        "401":
          description: |
            Access token is missing or invalid
    put:
      security:
        - Authorization: []
      tags:
      - definition
      - kpi
      description: |
        Updates selected properties of the KpiKind object.
        <br/><b>Notes:</b><ul>
        <li>This query updates the fields explicitly present in the body. All fields absent from the body keep their existing value.</li>
        <li>The id parameter <i>may</i> be present in the body, but it must match the existing id. It is not possible to change the unique ID of an object.</li>
        </ul>
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KpiKind"
      parameters:
      - name: "id"
        in: "path"
        required: true
        description: |
          The internal Id of the KpiKind
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    $ref: "#/components/schemas/KpiKind"
        "401":
          description: |
            Access token is missing or invalid
  '/api/kpi/1.0/kpis/{id}':
    get:
      security:
        - Authorization: []
      tags:
      - kpi
      - definition
      description: |
        Obtain the setup properties of a KPI
      parameters:
      - name: "id"
        in: "path"
        required: true
        description: |
          The internal id of the KPI
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    $ref: "#/components/schemas/Kpi"
        "401":
          description: |
            Access token is missing or invalid
    put:
      security:
        - Authorization: []
      tags:
      - kpi
      - definition
      description: |
        Update the setup properties of a KPI
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Kpi"
      parameters:
      - name: "id"
        in: "path"
        required: true
        description: |
          The internal id of the KPI
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 204
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    example: null
        "401":
          description: |
            Access token is missing or invalid
  '/api/kpi/1.0/resources/{id}/setup':
    get:
      security:
        - Authorization: []
      tags:
      - kpi
      - definition
      description: |
        Obtain the list of all KPIs defined for a resource
      parameters:
      - name: "id"
        in: "path"
        required: true
        description: |
          The internal id of the resource for which KPIs are requested
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/Kpi"
        "401":
          description: |
            Access token is missing or invalid
  '/api/kpi/1.0/resources/{id}/setup/{kind}':
    get:
      security:
        - Authorization: []
      tags:
      - kpi
      - definition
      description: |
        Obtain the setup of a single KPI for the given resource
        <br/><b>Notes:</b><ul>
        <li>This call always returns a properly setup KPI, even if the provided KPI kind does not formally
        apply to the resource. This is useful to obtain KPIs with custom kinds.</li>
        </ul>
      parameters:
      - name: "id"
        in: "path"
        required: true
        description: |
          The internal id of the resource for which KPIs are requested
        schema:
          type: string
          format: guid
      - name: "kind"
        in: "path"
        required: true
        description: |
          The internal id of the reqiested KPI kind
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    $ref: "#/components/schemas/Kpi"
        "401":
          description: |
            Access token is missing or invalid
  '/api/metric/1.0/currentvalues':
    post:
      security:
        - Authorization: []
      tags:
      - metric
      - realtime
      description: |
        Update the value of a set of resource metrics
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MetricValues"
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 204
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    example: null
        "401":
          description: |
            Access token is missing or invalid
  '/api/metric/1.0/metrickinds':
    post:
      security:
        - Authorization: []
      tags:
      - definition
      - metric
      description: |
        Creates a new MetricKind object.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MetricKind"
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    $ref: "#/components/schemas/MetricKind"
        "401":
          description: |
            Access token is missing or invalid
    get:
      security:
        - Authorization: []
      tags:
      - definition
      - metric
      description: |
        Retrieves a list of MetricKind objects.
        <br/><b>Notes:</b><ul>
        <li>The returned list does not contain objects marked as hidden. To include those objects in the list, use the <tt>includehidden</tt> option in the parameters.</li>
        <li>The returned list of objects is subject to pagination.
        Pagination ensures that a query does not return an unexpectedly large data set.
        It is recommended to adapt the size of individual pages according to the expected size of the dataset.
        Making a single large query is usuall more efficient than making several small ones.</li>
        </ul>
      parameters:
      - name: "includehidden"
        in: "query"
        required: false
        description: |
          Whether to include hidden objects in the returned set.
          <br/><b>Notes:</b><ul>
          <li>When absent, the returned object list does not contain objects marked as hidden.</li>
          </ul>
        schema:
          type: boolean
      - name: "page"
        in: "query"
        required: false
        description: |
          The page number. Combined with the <tt>pagesize</tt> parameter, this defines the range of objects returned.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          <li>To iterate through items, increase the page number until the returned set is empty</li>
          </ul>
        schema:
          type: integer
          format: int64
          default: 0
          minimum: 0
      - name: "pagesize"
        in: "query"
        required: false
        description: |
          The page size. Combined with the <tt>page</tt> parameter, this defines the range of objects returned.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          </ul>
        schema:
          type: integer
          format: int64
          default: 20
          minimum: 1
      - name: "first"
        in: "query"
        required: false
        description: |
          The index of the first item to return.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          </ul>
        schema:
          type: integer
          format: int64
      - name: "last"
        in: "query"
        required: false
        description: |
          The index + 1 of the last item to return, when using the <tt>first</tt>/<tt>last</tt> combination.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          <li>Bear in mind that this is not the index of the last item to return, but the index <b>following</b> the last item to return.</li>
          <li>The <tt>last</tt> parameter is ignored if the <tt>first</tt> parameter is not given.</li>
          <li>The query will return at most <tt>last</tt> - <tt>first</tt> items.
          If the <tt>last</tt> parameter is not given, at most <tt>pagesize</tt> items will be returned.
          It is not recommended to leave <tt>last</tt> parameter unspecified.</li>
          <li>The behavior when <tt>last</tt> is less or equal to <tt>first</tt> is not specified, and subject to change.</li>
          </ul>
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/MetricKind"
        "401":
          description: |
            Access token is missing or invalid
  '/api/metric/1.0/metrickinds/{id}':
    get:
      security:
        - Authorization: []
      tags:
      - definition
      - metric
      description: |
        Gets a single MetricKind
        <br/><b>Notes:</b><ul>
        <li>The object is returned even if it is hidden.</li>
        </ul>
      parameters:
      - name: "id"
        in: "path"
        required: true
        description: |
          The internal Id of the MetricKind
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    $ref: "#/components/schemas/MetricKind"
        "401":
          description: |
            Access token is missing or invalid
    delete:
      security:
        - Authorization: []
      tags:
      - definition
      - metric
      description: |
        Removes the MetricKind object.
        <br/><b>Notes:</b><ul>
        <li>This does not actually delete the object from the database, as it may be needed for historical reasons.
        Instead, the <tt>hidden</tt> property of the object is set to <tt>true</tt>.</li>
        <li>It is possible to <i>undelete</i> an object by issuing a <tt>put</tt> query to set the
        <tt>hidden</tt> property back to <tt>false</tt>.</li>
        </ul>
      parameters:
      - name: "id"
        in: "path"
        required: true
        description: |
          The internal Id of the MetricKind
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 204
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    example: null
        "401":
          description: |
            Access token is missing or invalid
    put:
      security:
        - Authorization: []
      tags:
      - definition
      - metric
      description: |
        Updates selected properties of the MetricKind object.
        <br/><b>Notes:</b><ul>
        <li>This query updates the fields explicitly present in the body. All fields absent from the body keep their existing value.</li>
        <li>The id parameter <i>may</i> be present in the body, but it must match the existing id. It is not possible to change the unique ID of an object.</li>
        </ul>
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MetricKind"
      parameters:
      - name: "id"
        in: "path"
        required: true
        description: |
          The internal Id of the MetricKind
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    $ref: "#/components/schemas/MetricKind"
        "401":
          description: |
            Access token is missing or invalid
  '/api/metric/1.0/resources/{resourceid}/currentvalues/{metrickindid}':
    post:
      security:
        - Authorization: []
      tags:
      - metric
      - realtime
      description: |
        Update the value of a resource metric
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MetricValue"
      parameters:
      - name: "resourceid"
        in: "path"
        required: true
        description: |
          The internal GUID of the resource targeted by the metric
        schema:
          type: string
          format: guid
      - name: "metrickindid"
        in: "path"
        required: true
        description: |
          The internal GUID of the Metric Kind
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 204
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    example: null
        "401":
          description: |
            Access token is missing or invalid
    get:
      security:
        - Authorization: []
      tags:
      - metric
      - realtime
      description: |
        Retrieve the value of a resource metric
      parameters:
      - name: "resourceid"
        in: "path"
        required: true
        description: |
          The internal GUID of the resource targeted by the metric
        schema:
          type: string
          format: guid
      - name: "metrickindid"
        in: "path"
        required: true
        description: |
          The internal GUID of the Metric Kind
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    $ref: "#/components/schemas/MetricData"
        "401":
          description: |
            Access token is missing or invalid
  '/api/resource/1.0/connectiongroups':
    get:
      security:
        - Authorization: []
      tags:
      - resource
      description: |
        Retrieves a list of all connection groups that can be monitored by the current user
        <br/><b>Notes:</b><ul>
        <li>The returned list of objects is subject to pagination.
        Pagination ensures that a query does not return an unexpectedly large data set.
        It is recommended to adapt the size of individual pages according to the expected size of the dataset.
        Making a single large query is usuall more efficient than making several small ones.</li>
        </ul>
      parameters:
      - name: "page"
        in: "query"
        required: false
        description: |
          The page number. Combined with the <tt>pagesize</tt> parameter, this defines the range of objects returned.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          <li>To iterate through items, increase the page number until the returned set is empty</li>
          </ul>
        schema:
          type: integer
          format: int64
          default: 0
          minimum: 0
      - name: "pagesize"
        in: "query"
        required: false
        description: |
          The page size. Combined with the <tt>page</tt> parameter, this defines the range of objects returned.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          </ul>
        schema:
          type: integer
          format: int64
          default: 20
          minimum: 1
      - name: "first"
        in: "query"
        required: false
        description: |
          The index of the first item to return.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          </ul>
        schema:
          type: integer
          format: int64
      - name: "last"
        in: "query"
        required: false
        description: |
          The index + 1 of the last item to return, when using the <tt>first</tt>/<tt>last</tt> combination.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          <li>Bear in mind that this is not the index of the last item to return, but the index <b>following</b> the last item to return.</li>
          <li>The <tt>last</tt> parameter is ignored if the <tt>first</tt> parameter is not given.</li>
          <li>The query will return at most <tt>last</tt> - <tt>first</tt> items.
          If the <tt>last</tt> parameter is not given, at most <tt>pagesize</tt> items will be returned.
          It is not recommended to leave <tt>last</tt> parameter unspecified.</li>
          <li>The behavior when <tt>last</tt> is less or equal to <tt>first</tt> is not specified, and subject to change.</li>
          </ul>
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/Resource"
        "401":
          description: |
            Access token is missing or invalid
  '/api/resource/1.0/connections/{uniqueid}':
    get:
      security:
        - Authorization: []
      tags:
      - resource
      description: |
        Gets the resource corresponding to a connection identified by a unique name and a middleware.
        <br/><b>Notes:</b><ul>
        <li>An IM client typically registers additional information using the <c>imconnections</c> api.</li>
        </ul>
      parameters:
      - name: "autocreate"
        in: "query"
        required: false
        description: |
          Whether to auto-synchronize the cloud definition.
          <br/><b>Notes:</b><ul>
          <li>If the autocreate option is not set, issuing a GET for the given unique code returns a 404 if the resource was never synchronized before.</li>
          <li>It is recommended to set this field to true only when the query is performed by the client that is responsible for synchronizing the resource. Other clients should leave this field to false, in order to avoid updating a resource that they do not own.</li>
          </ul>
        schema:
          type: boolean
        example: 'false'
      - name: "displayname"
        in: "query"
        required: false
        description: |
          The display name that is used as the name of the resource during synchronization.
          <br/><b>Notes:</b><ul>
          <li>This field is ignored if autocreate is false</li>
          </ul>
        schema:
          type: string
        example: 'Display Name'
      - name: "uniqueid"
        in: "path"
        required: true
        description: |
          A user-defined unique name that represents the real world identity of the object.
          <br/><b>Notes:</b><ul>
          <li>Unique names are user defined, they do not need to be UUIDs.</li>
          <li>It is the client responsibility to ensure  that names are kept unique, and that the same name is always used to refer to the same item.</li>
          <li>Using the same uniqueid always returns the same resource, even across multiple databases. This is done on purpose so that databases can be consolidated if the need arises.</li>
          <li>It is impossible to change the uniqueid of a resource. Once it has been referred to using a given uniqueid, the same uniqueid should be used forever.</li>
          <li>uniqueids need to be unique only in the context of the middleware, if one is specified as owner.</li>
          </ul>
        schema:
          type: string
        example: 'CN-101'
      - name: "middleware"
        in: "query"
        required: true
        description: |
          The middleware that owns the definition.
          <br/><b>Notes:</b><ul>
          <li>The uniqueid parameter needs to be unique only within the context of a single middleware.</li>
          </ul>
        schema:
          type: string
          format: guid
        example: '3c911041-1a97-4e5b-820a-e10ae79296c2'
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    $ref: "#/components/schemas/Resource"
        "401":
          description: |
            Access token is missing or invalid
    delete:
      security:
        - Authorization: []
      tags:
      - resource
      description: |
        Removes a connection from a middleware.
      parameters:
      - name: "reason"
        in: "query"
        required: false
        description: |
          The reason why the connection is deleted.
          <br/><b>Notes:</b><ul>
          <li>See the HiddenReason parameter in resource for a list of allowed values.</li>
          </ul>
        schema:
          type: integer
          format: int64
          minimum: 0
      - name: "uniqueid"
        in: "path"
        required: true
        description: |
          A user-defined unique name that represents the real world identity of the object.
          <br/><b>Notes:</b><ul>
          <li>Unique names are user defined, they do not need to be UUIDs.</li>
          <li>It is the client responsibility to ensure  that names are kept unique, and that the same name is always used to refer to the same item.</li>
          <li>Using the same uniqueid always returns the same resource, even across multiple databases. This is done on purpose so that databases can be consolidated if the need arises.</li>
          <li>It is impossible to change the uniqueid of a resource. Once it has been referred to using a given uniqueid, the same uniqueid should be used forever.</li>
          <li>uniqueids need to be unique only in the context of the middleware, if one is specified as owner.</li>
          </ul>
        schema:
          type: string
        example: 'CN-101'
      - name: "middleware"
        in: "query"
        required: true
        description: |
          The middleware that owns the definition.
          <br/><b>Notes:</b><ul>
          <li>The uniqueid parameter needs to be unique only within the context of a single middleware.</li>
          </ul>
        schema:
          type: string
          format: guid
        example: '3c911041-1a97-4e5b-820a-e10ae79296c2'
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 204
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    example: null
        "401":
          description: |
            Access token is missing or invalid
  '/api/resource/1.0/currenttenant':
    get:
      security:
        - Authorization: []
      tags:
      - resource
      description: |
        Retrieves the description of the current tenant
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    $ref: "#/components/schemas/Resource"
        "401":
          description: |
            Access token is missing or invalid
  '/api/resource/1.0/currentuser':
    get:
      security:
        - Authorization: []
      tags:
      - resource
      description: |
        Retrieves the description of the current user
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    $ref: "#/components/schemas/Resource"
        "401":
          description: |
            Access token is missing or invalid
  '/api/resource/1.0/imconnections/{id}':
    get:
      security:
        - Authorization: []
      tags:
      - resource
      description: |
        Retrieve additional information about an IM connection
        <br/><b>Notes:</b><ul>
        <li>It is expected that IM information has been setup by a PUT query.</li>
        <li>It is legal to retrieve the IM information for a connection that has not be the target of a PUT query. In that case, most of the fields returned by this query will be empty.</li>
        </ul>
      parameters:
      - name: "id"
        in: "path"
        required: true
        description: |
          The GUID of the connection resource
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    $ref: "#/components/schemas/ImConnection"
        "401":
          description: |
            Access token is missing or invalid
    put:
      security:
        - Authorization: []
      tags:
      - resource
      description: |
        Update the IM information about a connection.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImConnection"
      parameters:
      - name: "id"
        in: "path"
        required: true
        description: |
          The GUID of the connection resource
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 204
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    example: null
        "401":
          description: |
            Access token is missing or invalid
  '/api/resource/1.0/middlewareconnections':
    get:
      security:
        - Authorization: []
      tags:
      - resource
      description: |
        get
        <br/><b>Notes:</b><ul>
        <li>The returned list of objects is subject to pagination.
        Pagination ensures that a query does not return an unexpectedly large data set.
        It is recommended to adapt the size of individual pages according to the expected size of the dataset.
        Making a single large query is usuall more efficient than making several small ones.</li>
        <li>The returned list does not contain objects marked as hidden. To include those objects in the list, use the <tt>includehidden</tt> option in the parameters.</li>
        </ul>
      parameters:
      - name: "middleware"
        in: "query"
        required: true
        description: |
          The middleware that owns the connections.
        schema:
          type: string
          format: guid
      - name: "page"
        in: "query"
        required: false
        description: |
          The page number. Combined with the <tt>pagesize</tt> parameter, this defines the range of objects returned.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          <li>To iterate through items, increase the page number until the returned set is empty</li>
          </ul>
        schema:
          type: integer
          format: int64
          default: 0
          minimum: 0
      - name: "pagesize"
        in: "query"
        required: false
        description: |
          The page size. Combined with the <tt>page</tt> parameter, this defines the range of objects returned.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          </ul>
        schema:
          type: integer
          format: int64
          default: 20
          minimum: 1
      - name: "first"
        in: "query"
        required: false
        description: |
          The index of the first item to return.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          </ul>
        schema:
          type: integer
          format: int64
      - name: "last"
        in: "query"
        required: false
        description: |
          The index + 1 of the last item to return, when using the <tt>first</tt>/<tt>last</tt> combination.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          <li>Bear in mind that this is not the index of the last item to return, but the index <b>following</b> the last item to return.</li>
          <li>The <tt>last</tt> parameter is ignored if the <tt>first</tt> parameter is not given.</li>
          <li>The query will return at most <tt>last</tt> - <tt>first</tt> items.
          If the <tt>last</tt> parameter is not given, at most <tt>pagesize</tt> items will be returned.
          It is not recommended to leave <tt>last</tt> parameter unspecified.</li>
          <li>The behavior when <tt>last</tt> is less or equal to <tt>first</tt> is not specified, and subject to change.</li>
          </ul>
        schema:
          type: integer
          format: int64
      - name: "sortorder"
        in: "query"
        required: false
        description: |
          Sort order to apply while retrieving the connections from database. Defaults to ascending order. Acceptables values are 'asc' or 'desc'.
        schema:
          type: string
          format: csv
      - name: "searchtext"
        in: "query"
        required: false
        description: |
          Searchs the connections matching search text.
          Search is case in-sensitive. Note that, before passing searchtext as a query param, clients must encoded it using encodeURIComponent.
        schema:
          type: string
          format: csv
      - name: "includehidden"
        in: "query"
        required: false
        description: |
          Whether to include hidden objects in the returned set.
          <br/><b>Notes:</b><ul>
          <li>When absent, the returned object list does not contain objects marked as hidden.</li>
          </ul>
        schema:
          type: boolean
      - name: "hiddenonly"
        in: "query"
        required: false
        description: |
          Whether to include only hidden connections in the returned set. Both includehidden and hiddenonly cannot be set to true. Defaults to false.
        schema:
          type: boolean
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    $ref: "#/components/schemas/MiddlewareConnections"
        "401":
          description: |
            Access token is missing or invalid
  '/api/resource/1.0/middlewares':
    get:
      security:
        - Authorization: []
      tags:
      - resource
      description: |
        Retrieves a list of all middlewares that can be monitored by the current user
        <br/><b>Notes:</b><ul>
        <li>The returned list of objects is subject to pagination.
        Pagination ensures that a query does not return an unexpectedly large data set.
        It is recommended to adapt the size of individual pages according to the expected size of the dataset.
        Making a single large query is usuall more efficient than making several small ones.</li>
        </ul>
      parameters:
      - name: "page"
        in: "query"
        required: false
        description: |
          The page number. Combined with the <tt>pagesize</tt> parameter, this defines the range of objects returned.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          <li>To iterate through items, increase the page number until the returned set is empty</li>
          </ul>
        schema:
          type: integer
          format: int64
          default: 0
          minimum: 0
      - name: "pagesize"
        in: "query"
        required: false
        description: |
          The page size. Combined with the <tt>page</tt> parameter, this defines the range of objects returned.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          </ul>
        schema:
          type: integer
          format: int64
          default: 20
          minimum: 1
      - name: "first"
        in: "query"
        required: false
        description: |
          The index of the first item to return.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          </ul>
        schema:
          type: integer
          format: int64
      - name: "last"
        in: "query"
        required: false
        description: |
          The index + 1 of the last item to return, when using the <tt>first</tt>/<tt>last</tt> combination.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          <li>Bear in mind that this is not the index of the last item to return, but the index <b>following</b> the last item to return.</li>
          <li>The <tt>last</tt> parameter is ignored if the <tt>first</tt> parameter is not given.</li>
          <li>The query will return at most <tt>last</tt> - <tt>first</tt> items.
          If the <tt>last</tt> parameter is not given, at most <tt>pagesize</tt> items will be returned.
          It is not recommended to leave <tt>last</tt> parameter unspecified.</li>
          <li>The behavior when <tt>last</tt> is less or equal to <tt>first</tt> is not specified, and subject to change.</li>
          </ul>
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/Resource"
        "401":
          description: |
            Access token is missing or invalid
  '/api/resource/1.0/middlewares/{uniqueid}':
    get:
      security:
        - Authorization: []
      tags:
      - resource
      description: |
        Gets the resource corresponding to a middleware identified by a unique name.
      parameters:
      - name: "uniqueid"
        in: "path"
        required: true
        description: |
          A user-defined unique name that represents the real world identity of the object.
          <br/><b>Notes:</b><ul>
          <li>Unique names are user defined, they do not need to be UUIDs.</li>
          <li>It is the client responsibility to ensure  that names are kept unique, and that the same name is always used to refer to the same item.</li>
          <li>Using the same uniqueid always returns the same resource, even across multiple databases. This is done on purpose so that databases can be consolidated if the need arises.</li>
          <li>It is impossible to change the uniqueid of a resource. Once it has been referred to using a given uniqueid, the same uniqueid should be used forever.</li>
          <li>uniqueids need to be unique only in the context of the middleware, if one is specified as owner.</li>
          </ul>
        schema:
          type: string
        example: 'SN-999999'
      - name: "autocreate"
        in: "query"
        required: false
        description: |
          Whether to auto-synchronize the cloud definition.
          <br/><b>Notes:</b><ul>
          <li>If the autocreate option is not set, issuing a GET for the given unique code returns a 404 if the resource was never synchronized before.</li>
          <li>It is recommended to set this field to true only when the query is performed by the client that is responsible for synchronizing the resource. Other clients should leave this field to false, in order to avoid updating a resource that they do not own.</li>
          </ul>
        schema:
          type: boolean
        example: 'false'
      - name: "displayname"
        in: "query"
        required: false
        description: |
          The display name that is used as the name of the resource during synchronization.
          <br/><b>Notes:</b><ul>
          <li>This field is ignored if autocreate is false</li>
          </ul>
        schema:
          type: string
        example: 'Display Name'
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    $ref: "#/components/schemas/Resource"
        "401":
          description: |
            Access token is missing or invalid
  '/api/resource/1.0/properties/{resource}/{property}':
    get:
      security:
        - Authorization: []
      tags:
      - resource
      description: |
        Retrieves the value of the property associated with the resource.
        <br/><b>Notes:</b><ul>
        <li>If the property does not exist, or if it does not have a value, the API returns status 200, with a value of null.</li>
        </ul>
      parameters:
      - name: "resource"
        in: "path"
        required: true
        description: |
          The GUID of the resource associated with the property.
        schema:
          type: string
          format: guid
      - name: "property"
        in: "path"
        required: true
        description: |
          The GUID of the property kind.
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    $ref: "#/components/schemas/ResourceProperty"
        "401":
          description: |
            Access token is missing or invalid
    post:
      security:
        - Authorization: []
      tags:
      - resource
      description: |
        Sets the value of the property associated with the resource.
        <br/><b>Notes:</b><ul>
        <li>The payload (body) is used as the value of the property. It can be any JSON value, either a scalar, an array or a map.</li>
        <li>The new value totally replaces the old one, even if the value is a structured JSON map.</li>
        </ul>
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JsonData"
      parameters:
      - name: "resource"
        in: "path"
        required: true
        description: |
          The GUID of the resource associated with the property.
        schema:
          type: string
          format: guid
      - name: "property"
        in: "path"
        required: true
        description: |
          The GUID of the property kind.
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 204
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    example: null
        "401":
          description: |
            Access token is missing or invalid
    delete:
      security:
        - Authorization: []
      tags:
      - resource
      description: |
        Deletes the value of the property associated with the resource.
      parameters:
      - name: "resource"
        in: "path"
        required: true
        description: |
          The GUID of the resource associated with the property.
        schema:
          type: string
          format: guid
      - name: "property"
        in: "path"
        required: true
        description: |
          The GUID of the property kind.
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 204
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    example: null
        "401":
          description: |
            Access token is missing or invalid
  '/api/resource/1.0/propertykinds':
    post:
      security:
        - Authorization: []
      tags:
      - definition
      - resource
      description: |
        Creates a new ResourcePropertyKind object.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResourcePropertyKind"
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    $ref: "#/components/schemas/ResourcePropertyKind"
        "401":
          description: |
            Access token is missing or invalid
    get:
      security:
        - Authorization: []
      tags:
      - definition
      - resource
      description: |
        Retrieves a list of ResourcePropertyKind objects.
        <br/><b>Notes:</b><ul>
        <li>The returned list does not contain objects marked as hidden. To include those objects in the list, use the <tt>includehidden</tt> option in the parameters.</li>
        <li>The returned list of objects is subject to pagination.
        Pagination ensures that a query does not return an unexpectedly large data set.
        It is recommended to adapt the size of individual pages according to the expected size of the dataset.
        Making a single large query is usuall more efficient than making several small ones.</li>
        </ul>
      parameters:
      - name: "includehidden"
        in: "query"
        required: false
        description: |
          Whether to include hidden objects in the returned set.
          <br/><b>Notes:</b><ul>
          <li>When absent, the returned object list does not contain objects marked as hidden.</li>
          </ul>
        schema:
          type: boolean
      - name: "page"
        in: "query"
        required: false
        description: |
          The page number. Combined with the <tt>pagesize</tt> parameter, this defines the range of objects returned.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          <li>To iterate through items, increase the page number until the returned set is empty</li>
          </ul>
        schema:
          type: integer
          format: int64
          default: 0
          minimum: 0
      - name: "pagesize"
        in: "query"
        required: false
        description: |
          The page size. Combined with the <tt>page</tt> parameter, this defines the range of objects returned.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          </ul>
        schema:
          type: integer
          format: int64
          default: 20
          minimum: 1
      - name: "first"
        in: "query"
        required: false
        description: |
          The index of the first item to return.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          </ul>
        schema:
          type: integer
          format: int64
      - name: "last"
        in: "query"
        required: false
        description: |
          The index + 1 of the last item to return, when using the <tt>first</tt>/<tt>last</tt> combination.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          <li>Bear in mind that this is not the index of the last item to return, but the index <b>following</b> the last item to return.</li>
          <li>The <tt>last</tt> parameter is ignored if the <tt>first</tt> parameter is not given.</li>
          <li>The query will return at most <tt>last</tt> - <tt>first</tt> items.
          If the <tt>last</tt> parameter is not given, at most <tt>pagesize</tt> items will be returned.
          It is not recommended to leave <tt>last</tt> parameter unspecified.</li>
          <li>The behavior when <tt>last</tt> is less or equal to <tt>first</tt> is not specified, and subject to change.</li>
          </ul>
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/ResourcePropertyKind"
        "401":
          description: |
            Access token is missing or invalid
  '/api/resource/1.0/propertykinds/{id}':
    get:
      security:
        - Authorization: []
      tags:
      - definition
      - resource
      description: |
        Gets a single ResourcePropertyKind
        <br/><b>Notes:</b><ul>
        <li>The object is returned even if it is hidden.</li>
        </ul>
      parameters:
      - name: "id"
        in: "path"
        required: true
        description: |
          The internal Id of the ResourcePropertyKind
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    $ref: "#/components/schemas/ResourcePropertyKind"
        "401":
          description: |
            Access token is missing or invalid
    delete:
      security:
        - Authorization: []
      tags:
      - definition
      - resource
      description: |
        Removes the ResourcePropertyKind object.
        <br/><b>Notes:</b><ul>
        <li>This does not actually delete the object from the database, as it may be needed for historical reasons.
        Instead, the <tt>hidden</tt> property of the object is set to <tt>true</tt>.</li>
        <li>It is possible to <i>undelete</i> an object by issuing a <tt>put</tt> query to set the
        <tt>hidden</tt> property back to <tt>false</tt>.</li>
        </ul>
      parameters:
      - name: "id"
        in: "path"
        required: true
        description: |
          The internal Id of the ResourcePropertyKind
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 204
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    example: null
        "401":
          description: |
            Access token is missing or invalid
    put:
      security:
        - Authorization: []
      tags:
      - definition
      - resource
      description: |
        Updates selected properties of the ResourcePropertyKind object.
        <br/><b>Notes:</b><ul>
        <li>This query updates the fields explicitly present in the body. All fields absent from the body keep their existing value.</li>
        <li>The id parameter <i>may</i> be present in the body, but it must match the existing id. It is not possible to change the unique ID of an object.</li>
        </ul>
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResourcePropertyKind"
      parameters:
      - name: "id"
        in: "path"
        required: true
        description: |
          The internal Id of the ResourcePropertyKind
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    $ref: "#/components/schemas/ResourcePropertyKind"
        "401":
          description: |
            Access token is missing or invalid
  '/api/resource/1.0/resourcekinds':
    post:
      security:
        - Authorization: []
      tags:
      - definition
      - resource
      description: |
        Creates a new ResourceKind object.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResourceKind"
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    $ref: "#/components/schemas/ResourceKind"
        "401":
          description: |
            Access token is missing or invalid
    get:
      security:
        - Authorization: []
      tags:
      - definition
      - resource
      description: |
        Retrieves a list of ResourceKind objects.
        <br/><b>Notes:</b><ul>
        <li>The returned list does not contain objects marked as hidden. To include those objects in the list, use the <tt>includehidden</tt> option in the parameters.</li>
        <li>The returned list of objects is subject to pagination.
        Pagination ensures that a query does not return an unexpectedly large data set.
        It is recommended to adapt the size of individual pages according to the expected size of the dataset.
        Making a single large query is usuall more efficient than making several small ones.</li>
        </ul>
      parameters:
      - name: "includehidden"
        in: "query"
        required: false
        description: |
          Whether to include hidden objects in the returned set.
          <br/><b>Notes:</b><ul>
          <li>When absent, the returned object list does not contain objects marked as hidden.</li>
          </ul>
        schema:
          type: boolean
      - name: "page"
        in: "query"
        required: false
        description: |
          The page number. Combined with the <tt>pagesize</tt> parameter, this defines the range of objects returned.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          <li>To iterate through items, increase the page number until the returned set is empty</li>
          </ul>
        schema:
          type: integer
          format: int64
          default: 0
          minimum: 0
      - name: "pagesize"
        in: "query"
        required: false
        description: |
          The page size. Combined with the <tt>page</tt> parameter, this defines the range of objects returned.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          </ul>
        schema:
          type: integer
          format: int64
          default: 20
          minimum: 1
      - name: "first"
        in: "query"
        required: false
        description: |
          The index of the first item to return.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          </ul>
        schema:
          type: integer
          format: int64
      - name: "last"
        in: "query"
        required: false
        description: |
          The index + 1 of the last item to return, when using the <tt>first</tt>/<tt>last</tt> combination.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          <li>Bear in mind that this is not the index of the last item to return, but the index <b>following</b> the last item to return.</li>
          <li>The <tt>last</tt> parameter is ignored if the <tt>first</tt> parameter is not given.</li>
          <li>The query will return at most <tt>last</tt> - <tt>first</tt> items.
          If the <tt>last</tt> parameter is not given, at most <tt>pagesize</tt> items will be returned.
          It is not recommended to leave <tt>last</tt> parameter unspecified.</li>
          <li>The behavior when <tt>last</tt> is less or equal to <tt>first</tt> is not specified, and subject to change.</li>
          </ul>
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/ResourceKind"
        "401":
          description: |
            Access token is missing or invalid
  '/api/resource/1.0/resourcekinds/{id}':
    get:
      security:
        - Authorization: []
      tags:
      - definition
      - resource
      description: |
        Gets a single ResourceKind
        <br/><b>Notes:</b><ul>
        <li>The object is returned even if it is hidden.</li>
        </ul>
      parameters:
      - name: "id"
        in: "path"
        required: true
        description: |
          The internal Id of the ResourceKind
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    $ref: "#/components/schemas/ResourceKind"
        "401":
          description: |
            Access token is missing or invalid
    delete:
      security:
        - Authorization: []
      tags:
      - definition
      - resource
      description: |
        Removes the ResourceKind object.
        <br/><b>Notes:</b><ul>
        <li>This does not actually delete the object from the database, as it may be needed for historical reasons.
        Instead, the <tt>hidden</tt> property of the object is set to <tt>true</tt>.</li>
        <li>It is possible to <i>undelete</i> an object by issuing a <tt>put</tt> query to set the
        <tt>hidden</tt> property back to <tt>false</tt>.</li>
        </ul>
      parameters:
      - name: "id"
        in: "path"
        required: true
        description: |
          The internal Id of the ResourceKind
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 204
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    example: null
        "401":
          description: |
            Access token is missing or invalid
    put:
      security:
        - Authorization: []
      tags:
      - definition
      - resource
      description: |
        Updates selected properties of the ResourceKind object.
        <br/><b>Notes:</b><ul>
        <li>This query updates the fields explicitly present in the body. All fields absent from the body keep their existing value.</li>
        <li>The id parameter <i>may</i> be present in the body, but it must match the existing id. It is not possible to change the unique ID of an object.</li>
        </ul>
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResourceKind"
      parameters:
      - name: "id"
        in: "path"
        required: true
        description: |
          The internal Id of the ResourceKind
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    $ref: "#/components/schemas/ResourceKind"
        "401":
          description: |
            Access token is missing or invalid
  '/api/resource/1.0/resourcelinkkinds':
    post:
      security:
        - Authorization: []
      tags:
      - definition
      - resource
      description: |
        Creates a new ResourceLinkKind object.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResourceLinkKind"
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    $ref: "#/components/schemas/ResourceLinkKind"
        "401":
          description: |
            Access token is missing or invalid
    get:
      security:
        - Authorization: []
      tags:
      - definition
      - resource
      description: |
        Retrieves a list of ResourceLinkKind objects.
        <br/><b>Notes:</b><ul>
        <li>The returned list does not contain objects marked as hidden. To include those objects in the list, use the <tt>includehidden</tt> option in the parameters.</li>
        <li>The returned list of objects is subject to pagination.
        Pagination ensures that a query does not return an unexpectedly large data set.
        It is recommended to adapt the size of individual pages according to the expected size of the dataset.
        Making a single large query is usuall more efficient than making several small ones.</li>
        </ul>
      parameters:
      - name: "includehidden"
        in: "query"
        required: false
        description: |
          Whether to include hidden objects in the returned set.
          <br/><b>Notes:</b><ul>
          <li>When absent, the returned object list does not contain objects marked as hidden.</li>
          </ul>
        schema:
          type: boolean
      - name: "page"
        in: "query"
        required: false
        description: |
          The page number. Combined with the <tt>pagesize</tt> parameter, this defines the range of objects returned.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          <li>To iterate through items, increase the page number until the returned set is empty</li>
          </ul>
        schema:
          type: integer
          format: int64
          default: 0
          minimum: 0
      - name: "pagesize"
        in: "query"
        required: false
        description: |
          The page size. Combined with the <tt>page</tt> parameter, this defines the range of objects returned.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          </ul>
        schema:
          type: integer
          format: int64
          default: 20
          minimum: 1
      - name: "first"
        in: "query"
        required: false
        description: |
          The index of the first item to return.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          </ul>
        schema:
          type: integer
          format: int64
      - name: "last"
        in: "query"
        required: false
        description: |
          The index + 1 of the last item to return, when using the <tt>first</tt>/<tt>last</tt> combination.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          <li>Bear in mind that this is not the index of the last item to return, but the index <b>following</b> the last item to return.</li>
          <li>The <tt>last</tt> parameter is ignored if the <tt>first</tt> parameter is not given.</li>
          <li>The query will return at most <tt>last</tt> - <tt>first</tt> items.
          If the <tt>last</tt> parameter is not given, at most <tt>pagesize</tt> items will be returned.
          It is not recommended to leave <tt>last</tt> parameter unspecified.</li>
          <li>The behavior when <tt>last</tt> is less or equal to <tt>first</tt> is not specified, and subject to change.</li>
          </ul>
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/ResourceLinkKind"
        "401":
          description: |
            Access token is missing or invalid
  '/api/resource/1.0/resourcelinkkinds/{id}':
    get:
      security:
        - Authorization: []
      tags:
      - definition
      - resource
      description: |
        Gets a single ResourceLinkKind
        <br/><b>Notes:</b><ul>
        <li>The object is returned even if it is hidden.</li>
        </ul>
      parameters:
      - name: "id"
        in: "path"
        required: true
        description: |
          The internal Id of the ResourceLinkKind
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    $ref: "#/components/schemas/ResourceLinkKind"
        "401":
          description: |
            Access token is missing or invalid
    delete:
      security:
        - Authorization: []
      tags:
      - definition
      - resource
      description: |
        Removes the ResourceLinkKind object.
        <br/><b>Notes:</b><ul>
        <li>This does not actually delete the object from the database, as it may be needed for historical reasons.
        Instead, the <tt>hidden</tt> property of the object is set to <tt>true</tt>.</li>
        <li>It is possible to <i>undelete</i> an object by issuing a <tt>put</tt> query to set the
        <tt>hidden</tt> property back to <tt>false</tt>.</li>
        </ul>
      parameters:
      - name: "id"
        in: "path"
        required: true
        description: |
          The internal Id of the ResourceLinkKind
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 204
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    example: null
        "401":
          description: |
            Access token is missing or invalid
    put:
      security:
        - Authorization: []
      tags:
      - definition
      - resource
      description: |
        Updates selected properties of the ResourceLinkKind object.
        <br/><b>Notes:</b><ul>
        <li>This query updates the fields explicitly present in the body. All fields absent from the body keep their existing value.</li>
        <li>The id parameter <i>may</i> be present in the body, but it must match the existing id. It is not possible to change the unique ID of an object.</li>
        </ul>
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResourceLinkKind"
      parameters:
      - name: "id"
        in: "path"
        required: true
        description: |
          The internal Id of the ResourceLinkKind
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    $ref: "#/components/schemas/ResourceLinkKind"
        "401":
          description: |
            Access token is missing or invalid
  '/api/resource/1.0/resources':
    post:
      security:
        - Authorization: []
      tags:
      - definition
      - resource
      description: |
        Creates a new Resource object.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Resource"
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    $ref: "#/components/schemas/Resource"
        "401":
          description: |
            Access token is missing or invalid
    get:
      security:
        - Authorization: []
      tags:
      - definition
      - resource
      description: |
        Retrieves a list of Resource objects.
        <br/><b>Notes:</b><ul>
        <li>The returned list does not contain objects marked as hidden. To include those objects in the list, use the <tt>includehidden</tt> option in the parameters.</li>
        <li>The returned list of objects is subject to pagination.
        Pagination ensures that a query does not return an unexpectedly large data set.
        It is recommended to adapt the size of individual pages according to the expected size of the dataset.
        Making a single large query is usuall more efficient than making several small ones.</li>
        </ul>
      parameters:
      - name: "includehidden"
        in: "query"
        required: false
        description: |
          Whether to include hidden objects in the returned set.
          <br/><b>Notes:</b><ul>
          <li>When absent, the returned object list does not contain objects marked as hidden.</li>
          </ul>
        schema:
          type: boolean
      - name: "page"
        in: "query"
        required: false
        description: |
          The page number. Combined with the <tt>pagesize</tt> parameter, this defines the range of objects returned.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          <li>To iterate through items, increase the page number until the returned set is empty</li>
          </ul>
        schema:
          type: integer
          format: int64
          default: 0
          minimum: 0
      - name: "pagesize"
        in: "query"
        required: false
        description: |
          The page size. Combined with the <tt>page</tt> parameter, this defines the range of objects returned.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          </ul>
        schema:
          type: integer
          format: int64
          default: 20
          minimum: 1
      - name: "first"
        in: "query"
        required: false
        description: |
          The index of the first item to return.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          </ul>
        schema:
          type: integer
          format: int64
      - name: "last"
        in: "query"
        required: false
        description: |
          The index + 1 of the last item to return, when using the <tt>first</tt>/<tt>last</tt> combination.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          <li>Bear in mind that this is not the index of the last item to return, but the index <b>following</b> the last item to return.</li>
          <li>The <tt>last</tt> parameter is ignored if the <tt>first</tt> parameter is not given.</li>
          <li>The query will return at most <tt>last</tt> - <tt>first</tt> items.
          If the <tt>last</tt> parameter is not given, at most <tt>pagesize</tt> items will be returned.
          It is not recommended to leave <tt>last</tt> parameter unspecified.</li>
          <li>The behavior when <tt>last</tt> is less or equal to <tt>first</tt> is not specified, and subject to change.</li>
          </ul>
        schema:
          type: integer
          format: int64
      - name: "kind"
        in: "query"
        required: false
        description: |
          The GUID of a ResourceKind object. Only Resource objects having this value as kind are selected.
          <br/><b>Notes:</b><ul>
          <li>This parameter acts as a filter, and combines with other filters. Only Resource objects matching all filters are selected.</li>
          </ul>
        schema:
          type: string
          format: guid
      - name: "includelinks"
        in: "query"
        required: false
        description: |
          Whether to include the <tt>links</tt> property in each of the returned resources
        schema:
          type: boolean
      - name: "maxreportedlinks"
        in: "query"
        required: false
        description: |
          The maximum number of items returnes in the <tt>links</tt> property for each resource.
        schema:
          type: integer
          format: int64
          default: 1000
          minimum: 0
      - name: "links_elementkind"
        in: "query"
        required: false
        description: |
          A comma-separated list of ResourceKind guids, limiting the elements reported in the <tt>links</tt> property.
        schema:
          type: string
          format: csv
      - name: "links_linkkind"
        in: "query"
        required: false
        description: |
          A comma-separated list of ResourceLinkKind guids, limiting the elements reported in the <tt>links</tt> property.
        schema:
          type: string
          format: csv
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/Resource"
        "401":
          description: |
            Access token is missing or invalid
  '/api/resource/1.0/resources/{id}':
    get:
      security:
        - Authorization: []
      tags:
      - definition
      - resource
      description: |
        Gets a single Resource
        <br/><b>Notes:</b><ul>
        <li>The object is returned even if it is hidden.</li>
        </ul>
      parameters:
      - name: "includelinks"
        in: "query"
        required: false
        description: |
          Whether to include the <tt>links</tt> property in each of the returned resources
        schema:
          type: boolean
      - name: "maxreportedlinks"
        in: "query"
        required: false
        description: |
          The maximum number of items returnes in the <tt>links</tt> property for each resource.
        schema:
          type: integer
          format: int64
          default: 1000
          minimum: 0
      - name: "links_elementkind"
        in: "query"
        required: false
        description: |
          A comma-separated list of ResourceKind guids, limiting the elements reported in the <tt>links</tt> property.
        schema:
          type: string
          format: csv
      - name: "links_linkkind"
        in: "query"
        required: false
        description: |
          A comma-separated list of ResourceLinkKind guids, limiting the elements reported in the <tt>links</tt> property.
        schema:
          type: string
          format: csv
      - name: "id"
        in: "path"
        required: true
        description: |
          The internal Id of the Resource
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    $ref: "#/components/schemas/Resource"
        "401":
          description: |
            Access token is missing or invalid
    delete:
      security:
        - Authorization: []
      tags:
      - definition
      - resource
      description: |
        Removes the Resource object.
        <br/><b>Notes:</b><ul>
        <li>This does not actually delete the object from the database, as it may be needed for historical reasons.
        Instead, the <tt>hidden</tt> property of the object is set to <tt>true</tt>.</li>
        <li>It is possible to <i>undelete</i> an object by issuing a <tt>put</tt> query to set the
        <tt>hidden</tt> property back to <tt>false</tt>.</li>
        </ul>
      parameters:
      - name: "reason"
        in: "query"
        required: false
        description: |
          <b>Warning</b>: This feature is currently experimental and should not be used in production<br/>
          The reason why the resource is deleted.
          <br/><b>Notes:</b><ul>
          <li>This is equivalent to including the `hiddenreason` parameter to a PUT query.</li>
          </ul>
        schema:
          type: string
          format: guid
      - name: "id"
        in: "path"
        required: true
        description: |
          The internal Id of the Resource
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 204
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    example: null
        "401":
          description: |
            Access token is missing or invalid
    put:
      security:
        - Authorization: []
      tags:
      - definition
      - resource
      description: |
        Updates selected properties of the Resource object.
        <br/><b>Notes:</b><ul>
        <li>This query updates the fields explicitly present in the body. All fields absent from the body keep their existing value.</li>
        <li>The id parameter <i>may</i> be present in the body, but it must match the existing id. It is not possible to change the unique ID of an object.</li>
        </ul>
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Resource"
      parameters:
      - name: "id"
        in: "path"
        required: true
        description: |
          The internal Id of the Resource
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    $ref: "#/components/schemas/Resource"
        "401":
          description: |
            Access token is missing or invalid
  '/api/resource/1.0/resources/{id}/elements':
    get:
      security:
        - Authorization: []
      tags:
      - resource
      description: |
        The list of elements of a given resource.
        <br/><b>Notes:</b><ul>
        <li>The returned list of objects is subject to pagination.
        Pagination ensures that a query does not return an unexpectedly large data set.
        It is recommended to adapt the size of individual pages according to the expected size of the dataset.
        Making a single large query is usuall more efficient than making several small ones.</li>
        <li>The returned list does not contain objects marked as hidden. To include those objects in the list, use the <tt>includehidden</tt> option in the parameters.</li>
        </ul>
      parameters:
      - name: "kind"
        in: "query"
        required: false
        description: |
          A comma-separated list of GUID of ResourceKind objects. Only Resource objects having one of these values as kind are selected.
          <br/><b>Notes:</b><ul>
          <li>This parameter acts as a filter, and combines with other filters. Only Resource objects matching all filters are selected.</li>
          </ul>
        schema:
          type: string
          format: guid
      - name: "linkkind"
        in: "query"
        required: false
        description: |
          A comma-separated list of GUID of ResourceLinkKind objects. Only Resource objects having one of these values as linkkind are selected.
          <br/><b>Notes:</b><ul>
          <li>This parameter acts as a filter, and combines with other filters. Only Resource objects matching all filters are selected.</li>
          </ul>
        schema:
          type: string
          format: guid
      - name: "includelinks"
        in: "query"
        required: false
        description: |
          Whether to include the <tt>links</tt> property in each of the returned resources
        schema:
          type: boolean
      - name: "maxreportedlinks"
        in: "query"
        required: false
        description: |
          The maximum number of items returnes in the <tt>links</tt> property for each resource.
        schema:
          type: integer
          format: int64
          default: 1000
          minimum: 0
      - name: "links_elementkind"
        in: "query"
        required: false
        description: |
          A comma-separated list of ResourceKind guids, limiting the elements reported in the <tt>links</tt> property.
        schema:
          type: string
          format: csv
      - name: "links_linkkind"
        in: "query"
        required: false
        description: |
          A comma-separated list of ResourceLinkKind guids, limiting the elements reported in the <tt>links</tt> property.
        schema:
          type: string
          format: csv
      - name: "page"
        in: "query"
        required: false
        description: |
          The page number. Combined with the <tt>pagesize</tt> parameter, this defines the range of objects returned.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          <li>To iterate through items, increase the page number until the returned set is empty</li>
          </ul>
        schema:
          type: integer
          format: int64
          default: 0
          minimum: 0
      - name: "pagesize"
        in: "query"
        required: false
        description: |
          The page size. Combined with the <tt>page</tt> parameter, this defines the range of objects returned.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          </ul>
        schema:
          type: integer
          format: int64
          default: 20
          minimum: 1
      - name: "first"
        in: "query"
        required: false
        description: |
          The index of the first item to return.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          </ul>
        schema:
          type: integer
          format: int64
      - name: "last"
        in: "query"
        required: false
        description: |
          The index + 1 of the last item to return, when using the <tt>first</tt>/<tt>last</tt> combination.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          <li>Bear in mind that this is not the index of the last item to return, but the index <b>following</b> the last item to return.</li>
          <li>The <tt>last</tt> parameter is ignored if the <tt>first</tt> parameter is not given.</li>
          <li>The query will return at most <tt>last</tt> - <tt>first</tt> items.
          If the <tt>last</tt> parameter is not given, at most <tt>pagesize</tt> items will be returned.
          It is not recommended to leave <tt>last</tt> parameter unspecified.</li>
          <li>The behavior when <tt>last</tt> is less or equal to <tt>first</tt> is not specified, and subject to change.</li>
          </ul>
        schema:
          type: integer
          format: int64
      - name: "includehidden"
        in: "query"
        required: false
        description: |
          Whether to include hidden objects in the returned set.
          <br/><b>Notes:</b><ul>
          <li>When absent, the returned object list does not contain objects marked as hidden.</li>
          </ul>
        schema:
          type: boolean
      - name: "id"
        in: "path"
        required: true
        description: |
          The GUID of the resource acting as master in the relation.
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/Resource"
        "401":
          description: |
            Access token is missing or invalid
  '/api/resource/1.0/resources/{id}/links':
    post:
      security:
        - Authorization: []
      tags:
      - resource
      description: |
        Adds a link from the master to an element.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResourceLink"
      parameters:
      - name: "id"
        in: "path"
        required: true
        description: |
          The GUID of the resource acting as master in the relation.
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 204
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    example: null
        "401":
          description: |
            Access token is missing or invalid
    delete:
      security:
        - Authorization: []
      tags:
      - resource
      description: |
        Deletes one or more links from a master. All links that pass the filter are removed.
        <br/><b>Notes:</b><ul>
        <li>Great care must be taken to precisely filter the links to be deleted.
        Failure to provide specific filters may result in deleting more links than expected.</li>
        </ul>
      parameters:
      - name: "kind"
        in: "query"
        required: false
        description: |
          The GUID of a ResourceLinkKind object. Only Not specified objects having this value as kind are selected.
          <br/><b>Notes:</b><ul>
          <li>This parameter acts as a filter, and combines with other filters. Only Not specified objects matching all filters are selected.</li>
          </ul>
        schema:
          type: string
          format: guid
      - name: "element"
        in: "query"
        required: false
        description: |
          The GUID of a Resource object. Only Not specified objects having this value as element are selected.
          <br/><b>Notes:</b><ul>
          <li>This parameter acts as a filter, and combines with other filters. Only Not specified objects matching all filters are selected.</li>
          </ul>
        schema:
          type: string
          format: guid
      - name: "id"
        in: "path"
        required: true
        description: |
          The GUID of the resource acting as master in the relation.
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 204
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    example: null
        "401":
          description: |
            Access token is missing or invalid
  '/api/resource/1.0/resources/{id}/masters':
    get:
      security:
        - Authorization: []
      tags:
      - resource
      description: |
        The list of masters of a given resource.
        <br/><b>Notes:</b><ul>
        <li>The returned list of objects is subject to pagination.
        Pagination ensures that a query does not return an unexpectedly large data set.
        It is recommended to adapt the size of individual pages according to the expected size of the dataset.
        Making a single large query is usuall more efficient than making several small ones.</li>
        <li>The returned list does not contain objects marked as hidden. To include those objects in the list, use the <tt>includehidden</tt> option in the parameters.</li>
        </ul>
      parameters:
      - name: "kind"
        in: "query"
        required: false
        description: |
          A comma-separated list of GUID of ResourceKind objects. Only Resource objects having one of these values as kind are selected.
          <br/><b>Notes:</b><ul>
          <li>This parameter acts as a filter, and combines with other filters. Only Resource objects matching all filters are selected.</li>
          </ul>
        schema:
          type: string
          format: guid
      - name: "linkkind"
        in: "query"
        required: false
        description: |
          A comma-separated list of GUID of ResourceLinkKind objects. Only Resource objects having one of these values as linkkind are selected.
          <br/><b>Notes:</b><ul>
          <li>This parameter acts as a filter, and combines with other filters. Only Resource objects matching all filters are selected.</li>
          </ul>
        schema:
          type: string
          format: guid
      - name: "includelinks"
        in: "query"
        required: false
        description: |
          Whether to include the <tt>links</tt> property in each of the returned resources
        schema:
          type: boolean
      - name: "maxreportedlinks"
        in: "query"
        required: false
        description: |
          The maximum number of items returnes in the <tt>links</tt> property for each resource.
        schema:
          type: integer
          format: int64
          default: 1000
          minimum: 0
      - name: "links_elementkind"
        in: "query"
        required: false
        description: |
          A comma-separated list of ResourceKind guids, limiting the elements reported in the <tt>links</tt> property.
        schema:
          type: string
          format: csv
      - name: "links_linkkind"
        in: "query"
        required: false
        description: |
          A comma-separated list of ResourceLinkKind guids, limiting the elements reported in the <tt>links</tt> property.
        schema:
          type: string
          format: csv
      - name: "page"
        in: "query"
        required: false
        description: |
          The page number. Combined with the <tt>pagesize</tt> parameter, this defines the range of objects returned.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          <li>To iterate through items, increase the page number until the returned set is empty</li>
          </ul>
        schema:
          type: integer
          format: int64
          default: 0
          minimum: 0
      - name: "pagesize"
        in: "query"
        required: false
        description: |
          The page size. Combined with the <tt>page</tt> parameter, this defines the range of objects returned.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          </ul>
        schema:
          type: integer
          format: int64
          default: 20
          minimum: 1
      - name: "first"
        in: "query"
        required: false
        description: |
          The index of the first item to return.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          </ul>
        schema:
          type: integer
          format: int64
      - name: "last"
        in: "query"
        required: false
        description: |
          The index + 1 of the last item to return, when using the <tt>first</tt>/<tt>last</tt> combination.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          <li>Bear in mind that this is not the index of the last item to return, but the index <b>following</b> the last item to return.</li>
          <li>The <tt>last</tt> parameter is ignored if the <tt>first</tt> parameter is not given.</li>
          <li>The query will return at most <tt>last</tt> - <tt>first</tt> items.
          If the <tt>last</tt> parameter is not given, at most <tt>pagesize</tt> items will be returned.
          It is not recommended to leave <tt>last</tt> parameter unspecified.</li>
          <li>The behavior when <tt>last</tt> is less or equal to <tt>first</tt> is not specified, and subject to change.</li>
          </ul>
        schema:
          type: integer
          format: int64
      - name: "includehidden"
        in: "query"
        required: false
        description: |
          Whether to include hidden objects in the returned set.
          <br/><b>Notes:</b><ul>
          <li>When absent, the returned object list does not contain objects marked as hidden.</li>
          </ul>
        schema:
          type: boolean
      - name: "id"
        in: "path"
        required: true
        description: |
          The GUID of the resource acting as element in the relation.
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/Resource"
        "401":
          description: |
            Access token is missing or invalid
  '/api/resource/1.0/users':
    get:
      security:
        - Authorization: []
      tags:
      - resource
      description: |
        Retrieves a list of all users allowed to log-on into the application
        <br/><b>Notes:</b><ul>
        <li>The returned list of objects is subject to pagination.
        Pagination ensures that a query does not return an unexpectedly large data set.
        It is recommended to adapt the size of individual pages according to the expected size of the dataset.
        Making a single large query is usuall more efficient than making several small ones.</li>
        </ul>
      parameters:
      - name: "page"
        in: "query"
        required: false
        description: |
          The page number. Combined with the <tt>pagesize</tt> parameter, this defines the range of objects returned.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          <li>To iterate through items, increase the page number until the returned set is empty</li>
          </ul>
        schema:
          type: integer
          format: int64
          default: 0
          minimum: 0
      - name: "pagesize"
        in: "query"
        required: false
        description: |
          The page size. Combined with the <tt>page</tt> parameter, this defines the range of objects returned.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          </ul>
        schema:
          type: integer
          format: int64
          default: 20
          minimum: 1
      - name: "first"
        in: "query"
        required: false
        description: |
          The index of the first item to return.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          </ul>
        schema:
          type: integer
          format: int64
      - name: "last"
        in: "query"
        required: false
        description: |
          The index + 1 of the last item to return, when using the <tt>first</tt>/<tt>last</tt> combination.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          <li>Bear in mind that this is not the index of the last item to return, but the index <b>following</b> the last item to return.</li>
          <li>The <tt>last</tt> parameter is ignored if the <tt>first</tt> parameter is not given.</li>
          <li>The query will return at most <tt>last</tt> - <tt>first</tt> items.
          If the <tt>last</tt> parameter is not given, at most <tt>pagesize</tt> items will be returned.
          It is not recommended to leave <tt>last</tt> parameter unspecified.</li>
          <li>The behavior when <tt>last</tt> is less or equal to <tt>first</tt> is not specified, and subject to change.</li>
          </ul>
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/Resource"
        "401":
          description: |
            Access token is missing or invalid
  '/api/resource/1.0/workstations/{uniqueid}':
    get:
      security:
        - Authorization: []
      tags:
      - resource
      description: |
        Gets the resource corresponding to a workstation identified by a unique name and a middleware.
        <br/><b>Notes:</b><ul>
        <li>An IM client typically retrieves workstations to report their status as mirror members.</li>
        </ul>
      parameters:
      - name: "uniqueid"
        in: "path"
        required: true
        description: |
          A user-defined unique name that represents the real world identity of the object.
          <br/><b>Notes:</b><ul>
          <li>Unique names are user defined, they do not need to be UUIDs.</li>
          <li>It is the client responsibility to ensure  that names are kept unique, and that the same name is always used to refer to the same item.</li>
          <li>Using the same uniqueid always returns the same resource, even across multiple databases. This is done on purpose so that databases can be consolidated if the need arises.</li>
          <li>It is impossible to change the uniqueid of a resource. Once it has been referred to using a given uniqueid, the same uniqueid should be used forever.</li>
          <li>uniqueids need to be unique only in the context of the middleware, if one is specified as owner.</li>
          </ul>
        schema:
          type: string
        example: 'WS-IMSERVER-1'
      - name: "autocreate"
        in: "query"
        required: false
        description: |
          Whether to auto-synchronize the cloud definition.
          <br/><b>Notes:</b><ul>
          <li>If the autocreate option is not set, issuing a GET for the given unique code returns a 404 if the resource was never synchronized before.</li>
          <li>It is recommended to set this field to true only when the query is performed by the client that is responsible for synchronizing the resource. Other clients should leave this field to false, in order to avoid updating a resource that they do not own.</li>
          </ul>
        schema:
          type: boolean
        example: 'false'
      - name: "displayname"
        in: "query"
        required: false
        description: |
          The display name that is used as the name of the resource during synchronization.
          <br/><b>Notes:</b><ul>
          <li>This field is ignored if autocreate is false</li>
          </ul>
        schema:
          type: string
        example: 'Display Name'
      - name: "middleware"
        in: "query"
        required: true
        description: |
          The middleware that owns the definition.
          <br/><b>Notes:</b><ul>
          <li>The uniqueid parameter needs to be unique only within the context of a single middleware.</li>
          </ul>
        schema:
          type: string
          format: guid
        example: '3c911041-1a97-4e5b-820a-e10ae79296c2'
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    $ref: "#/components/schemas/Resource"
        "401":
          description: |
            Access token is missing or invalid
  '/api/specimen/1.0/eventkinds':
    post:
      security:
        - Authorization: []
      tags:
      - definition
      - specimen
      description: |
        Creates a new SpecimenEventKind object.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SpecimenEventKind"
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    $ref: "#/components/schemas/SpecimenEventKind"
        "401":
          description: |
            Access token is missing or invalid
    get:
      security:
        - Authorization: []
      tags:
      - definition
      - specimen
      description: |
        Retrieves a list of SpecimenEventKind objects.
        <br/><b>Notes:</b><ul>
        <li>The returned list does not contain objects marked as hidden. To include those objects in the list, use the <tt>includehidden</tt> option in the parameters.</li>
        <li>The returned list of objects is subject to pagination.
        Pagination ensures that a query does not return an unexpectedly large data set.
        It is recommended to adapt the size of individual pages according to the expected size of the dataset.
        Making a single large query is usuall more efficient than making several small ones.</li>
        </ul>
      parameters:
      - name: "includehidden"
        in: "query"
        required: false
        description: |
          Whether to include hidden objects in the returned set.
          <br/><b>Notes:</b><ul>
          <li>When absent, the returned object list does not contain objects marked as hidden.</li>
          </ul>
        schema:
          type: boolean
      - name: "page"
        in: "query"
        required: false
        description: |
          The page number. Combined with the <tt>pagesize</tt> parameter, this defines the range of objects returned.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          <li>To iterate through items, increase the page number until the returned set is empty</li>
          </ul>
        schema:
          type: integer
          format: int64
          default: 0
          minimum: 0
      - name: "pagesize"
        in: "query"
        required: false
        description: |
          The page size. Combined with the <tt>page</tt> parameter, this defines the range of objects returned.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          </ul>
        schema:
          type: integer
          format: int64
          default: 20
          minimum: 1
      - name: "first"
        in: "query"
        required: false
        description: |
          The index of the first item to return.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          </ul>
        schema:
          type: integer
          format: int64
      - name: "last"
        in: "query"
        required: false
        description: |
          The index + 1 of the last item to return, when using the <tt>first</tt>/<tt>last</tt> combination.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          <li>Bear in mind that this is not the index of the last item to return, but the index <b>following</b> the last item to return.</li>
          <li>The <tt>last</tt> parameter is ignored if the <tt>first</tt> parameter is not given.</li>
          <li>The query will return at most <tt>last</tt> - <tt>first</tt> items.
          If the <tt>last</tt> parameter is not given, at most <tt>pagesize</tt> items will be returned.
          It is not recommended to leave <tt>last</tt> parameter unspecified.</li>
          <li>The behavior when <tt>last</tt> is less or equal to <tt>first</tt> is not specified, and subject to change.</li>
          </ul>
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/SpecimenEventKind"
        "401":
          description: |
            Access token is missing or invalid
  '/api/specimen/1.0/eventkinds/{id}':
    get:
      security:
        - Authorization: []
      tags:
      - definition
      - specimen
      description: |
        Gets a single SpecimenEventKind
        <br/><b>Notes:</b><ul>
        <li>The object is returned even if it is hidden.</li>
        </ul>
      parameters:
      - name: "id"
        in: "path"
        required: true
        description: |
          The internal Id of the SpecimenEventKind
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    $ref: "#/components/schemas/SpecimenEventKind"
        "401":
          description: |
            Access token is missing or invalid
    delete:
      security:
        - Authorization: []
      tags:
      - definition
      - specimen
      description: |
        Removes the SpecimenEventKind object.
        <br/><b>Notes:</b><ul>
        <li>This does not actually delete the object from the database, as it may be needed for historical reasons.
        Instead, the <tt>hidden</tt> property of the object is set to <tt>true</tt>.</li>
        <li>It is possible to <i>undelete</i> an object by issuing a <tt>put</tt> query to set the
        <tt>hidden</tt> property back to <tt>false</tt>.</li>
        </ul>
      parameters:
      - name: "id"
        in: "path"
        required: true
        description: |
          The internal Id of the SpecimenEventKind
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 204
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    example: null
        "401":
          description: |
            Access token is missing or invalid
    put:
      security:
        - Authorization: []
      tags:
      - definition
      - specimen
      description: |
        Updates selected properties of the SpecimenEventKind object.
        <br/><b>Notes:</b><ul>
        <li>This query updates the fields explicitly present in the body. All fields absent from the body keep their existing value.</li>
        <li>The id parameter <i>may</i> be present in the body, but it must match the existing id. It is not possible to change the unique ID of an object.</li>
        </ul>
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SpecimenEventKind"
      parameters:
      - name: "id"
        in: "path"
        required: true
        description: |
          The internal Id of the SpecimenEventKind
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    $ref: "#/components/schemas/SpecimenEventKind"
        "401":
          description: |
            Access token is missing or invalid
  '/api/specimen/1.0/metrics':
    post:
      security:
        - Authorization: []
      tags:
      - specimen
      - realtime
      description: |
        Upload specimen metrics
        <br/><b>Notes:</b><ul>
        <li>Refer to readme file for more information on the upload of specimen metrics</li>
        </ul>
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 204
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    example: null
        "401":
          description: |
            Access token is missing or invalid
  '/api/specimen/1.0/workflowkinds':
    post:
      security:
        - Authorization: []
      tags:
      - definition
      - specimen
      description: |
        Creates a new SpecimenWorkflowKind object.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SpecimenWorkflowKind"
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    $ref: "#/components/schemas/SpecimenWorkflowKind"
        "401":
          description: |
            Access token is missing or invalid
    get:
      security:
        - Authorization: []
      tags:
      - definition
      - specimen
      description: |
        Retrieves a list of SpecimenWorkflowKind objects.
        <br/><b>Notes:</b><ul>
        <li>The returned list does not contain objects marked as hidden. To include those objects in the list, use the <tt>includehidden</tt> option in the parameters.</li>
        <li>The returned list of objects is subject to pagination.
        Pagination ensures that a query does not return an unexpectedly large data set.
        It is recommended to adapt the size of individual pages according to the expected size of the dataset.
        Making a single large query is usuall more efficient than making several small ones.</li>
        </ul>
      parameters:
      - name: "includehidden"
        in: "query"
        required: false
        description: |
          Whether to include hidden objects in the returned set.
          <br/><b>Notes:</b><ul>
          <li>When absent, the returned object list does not contain objects marked as hidden.</li>
          </ul>
        schema:
          type: boolean
      - name: "page"
        in: "query"
        required: false
        description: |
          The page number. Combined with the <tt>pagesize</tt> parameter, this defines the range of objects returned.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          <li>To iterate through items, increase the page number until the returned set is empty</li>
          </ul>
        schema:
          type: integer
          format: int64
          default: 0
          minimum: 0
      - name: "pagesize"
        in: "query"
        required: false
        description: |
          The page size. Combined with the <tt>page</tt> parameter, this defines the range of objects returned.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          </ul>
        schema:
          type: integer
          format: int64
          default: 20
          minimum: 1
      - name: "first"
        in: "query"
        required: false
        description: |
          The index of the first item to return.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          </ul>
        schema:
          type: integer
          format: int64
      - name: "last"
        in: "query"
        required: false
        description: |
          The index + 1 of the last item to return, when using the <tt>first</tt>/<tt>last</tt> combination.
          <br/><b>Notes:</b><ul>
          <li>Avoid specifying the range by mixing <tt>page</tt>/<tt>pagesize</tt> and <tt>first</tt>/<tt>last</tt> parameters. It is recommended to use <tt>page</tt>/<tt>pagesize</tt> rather than <tt>first</tt>/<tt>last</tt></li>
          <li>Bear in mind that this is not the index of the last item to return, but the index <b>following</b> the last item to return.</li>
          <li>The <tt>last</tt> parameter is ignored if the <tt>first</tt> parameter is not given.</li>
          <li>The query will return at most <tt>last</tt> - <tt>first</tt> items.
          If the <tt>last</tt> parameter is not given, at most <tt>pagesize</tt> items will be returned.
          It is not recommended to leave <tt>last</tt> parameter unspecified.</li>
          <li>The behavior when <tt>last</tt> is less or equal to <tt>first</tt> is not specified, and subject to change.</li>
          </ul>
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/SpecimenWorkflowKind"
        "401":
          description: |
            Access token is missing or invalid
  '/api/specimen/1.0/workflowkinds/{id}':
    get:
      security:
        - Authorization: []
      tags:
      - definition
      - specimen
      description: |
        Gets a single SpecimenWorkflowKind
        <br/><b>Notes:</b><ul>
        <li>The object is returned even if it is hidden.</li>
        </ul>
      parameters:
      - name: "id"
        in: "path"
        required: true
        description: |
          The internal Id of the SpecimenWorkflowKind
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    $ref: "#/components/schemas/SpecimenWorkflowKind"
        "401":
          description: |
            Access token is missing or invalid
    delete:
      security:
        - Authorization: []
      tags:
      - definition
      - specimen
      description: |
        Removes the SpecimenWorkflowKind object.
        <br/><b>Notes:</b><ul>
        <li>This does not actually delete the object from the database, as it may be needed for historical reasons.
        Instead, the <tt>hidden</tt> property of the object is set to <tt>true</tt>.</li>
        <li>It is possible to <i>undelete</i> an object by issuing a <tt>put</tt> query to set the
        <tt>hidden</tt> property back to <tt>false</tt>.</li>
        </ul>
      parameters:
      - name: "id"
        in: "path"
        required: true
        description: |
          The internal Id of the SpecimenWorkflowKind
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 204
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    example: null
        "401":
          description: |
            Access token is missing or invalid
    put:
      security:
        - Authorization: []
      tags:
      - definition
      - specimen
      description: |
        Updates selected properties of the SpecimenWorkflowKind object.
        <br/><b>Notes:</b><ul>
        <li>This query updates the fields explicitly present in the body. All fields absent from the body keep their existing value.</li>
        <li>The id parameter <i>may</i> be present in the body, but it must match the existing id. It is not possible to change the unique ID of an object.</li>
        </ul>
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SpecimenWorkflowKind"
      parameters:
      - name: "id"
        in: "path"
        required: true
        description: |
          The internal Id of the SpecimenWorkflowKind
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: |
            Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuscode:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: 'Success'
                  errors:
                    type: array
                    items:
                      type: string
                    example: null
                  data:
                    $ref: "#/components/schemas/SpecimenWorkflowKind"
        "401":
          description: |
            Access token is missing or invalid
components:
  securitySchemes:
    Authorization:
      description: |
        Enter here the value of the <tt>token</tt> field that you received from a valid /auth call
      type: apiKey
      in: header
      name: Authorization
  schemas:
    ImConnection:
      type: object
      description: |
        Additional, IM-specific information about a ressource that acts as a connection.
      properties:
        id:
          description: |
            The internal ID of the connection object.
            <br/><b>Notes:</b><ul>
            <li>This field is read only.
            It is included in the result of a GET query as information so that a client does not need to issue a subsequent query just to obtain that information.
            A client may choose to include it when updating the object with a PUT or a POST query, but the field will not be updated in the database.</li>
            </ul>
          example: 'd461286e-0897-459e-bb7e-949f2dfdaa5b'
        name:
          description: |
            The name of the connection. This field is retrieved from the name of the corresponding resource.
            <br/><b>Notes:</b><ul>
            <li>This field is read only.
            It is included in the result of a GET query as information so that a client does not need to issue a subsequent query just to obtain that information.
            A client may choose to include it when updating the object with a PUT or a POST query, but the field will not be updated in the database.</li>
            </ul>
          example: 'Architect 1'
        code:
          description: |
            The code of the connection, typically in the form CN-xxxx
            <br/><b>Notes:</b><ul>
            <li>This field is read only.
            It is included in the result of a GET query as information so that a client does not need to issue a subsequent query just to obtain that information.
            A client may choose to include it when updating the object with a PUT or a POST query, but the field will not be updated in the database.</li>
            <li>This field is retrieved from the systematic name of the corresponding resource.</li>
            </ul>
          example: 'CN-102'
        instrumentnumber:
          description: |
            The instrument number.
            <br/><b>Notes:</b><ul>
            <li>This field is read only.
            It is included in the result of a GET query as information so that a client does not need to issue a subsequent query just to obtain that information.
            A client may choose to include it when updating the object with a PUT or a POST query, but the field will not be updated in the database.</li>
            <li>This field is read-only and only retrieved if the code is CN- followed by a number.</li>
            </ul>
          example: 102
        systemconnection:
          description: |
            Whether this is a system connection.
            <br/><b>Notes:</b><ul>
            <li>This field is read only.
            It is included in the result of a GET query as information so that a client does not need to issue a subsequent query just to obtain that information.
            A client may choose to include it when updating the object with a PUT or a POST query, but the field will not be updated in the database.</li>
            <li>The value is derived from instrumentnumber</li>
            </ul>
          example: 'false'
        connectiontype:
          description: |
            The type of connection.
            <br/><b>Notes:</b><ul>
            <li>This field is read only.
            It is included in the result of a GET query as information so that a client does not need to issue a subsequent query just to obtain that information.
            A client may choose to include it when updating the object with a PUT or a POST query, but the field will not be updated in the database.</li>
            <li>The value is derived from `systemconnection`.</li>
            </ul>
          example: 'User Defined'
        site:
          description: |
            The internal ID of the resource representing the site.
            <br/><b>Notes:</b><ul>
            <li>This field is read only.
            It is included in the result of a GET query as information so that a client does not need to issue a subsequent query just to obtain that information.
            A client may choose to include it when updating the object with a PUT or a POST query, but the field will not be updated in the database.</li>
            <li>This resource can be used as a connection group.</li>
            </ul>
          type: string
          format: guid
          example: '11c8e647-f52c-40d2-9551-0bb62070236d'
        sitecode:
          description: |
            The code for the site.
          example: 'SW-HOSP'
        sitename:
          description: |
            The name of the site.
            <br/><b>Notes:</b><ul>
            <li>This field is ignored in a PUT if no `sitecode` is given.</li>
            <li>If this field is not specified, it defaults to `sitecode`.</li>
            </ul>
          example: 'Southwest Hospital'
        location:
          description: |
            The internal ID of the resource representing the location.
            <br/><b>Notes:</b><ul>
            <li>This field is read only.
            It is included in the result of a GET query as information so that a client does not need to issue a subsequent query just to obtain that information.
            A client may choose to include it when updating the object with a PUT or a POST query, but the field will not be updated in the database.</li>
            <li>This resource can be used as a connection group.</li>
            </ul>
          type: string
          format: guid
          example: '3ff65def-017e-49ee-845c-eac36bba4c32'
        locationcode:
          description: |
            The code for the location.
          example: 'EM'
        locationname:
          description: |
            The name of the location.
            <br/><b>Notes:</b><ul>
            <li>This field is ignored in a PUT if no `locationcode` is given.</li>
            <li>If the field is not specified, it defaults to `locationcode`.</li>
            </ul>
          example: 'Emergency Lab'
        configuration:
          description: |
            The internal ID of the resource representing the configuration.
            <br/><b>Notes:</b><ul>
            <li>This field is read only.
            It is included in the result of a GET query as information so that a client does not need to issue a subsequent query just to obtain that information.
            A client may choose to include it when updating the object with a PUT or a POST query, but the field will not be updated in the database.</li>
            <li>This resource can be used as a connection group.</li>
            </ul>
          type: string
          format: guid
          example: 'ee2168f0-183b-454f-a8a4-9f108baf2054'
        configurationcode:
          description: |
            The code for the configuration, typically in the form of CF-xxxx.
          example: 'CF-101'
        configurationname:
          description: |
            The name of the configuration.
            <br/><b>Notes:</b><ul>
            <li>This field is ignored in a PUT if no `configurationcode` is given.</li>
            </ul>
          example: 'Architect'
        driver:
          description: |
            The internal ID of the resource representing the driver and its version.
            <br/><b>Notes:</b><ul>
            <li>This field is read only.
            It is included in the result of a GET query as information so that a client does not need to issue a subsequent query just to obtain that information.
            A client may choose to include it when updating the object with a PUT or a POST query, but the field will not be updated in the database.</li>
            <li>This resource can be used as a connection group.</li>
            </ul>
          type: string
          format: guid
          example: '2271bc02-fbb6-4a9e-aadd-9955db569252'
        drivercode:
          description: |
            The code for the driver.
          example: 'diihl7i'
        drivername:
          description: |
            The name of the driver
          example: 'Configurable HL7 instrument'
        driverversion:
          description: |
            The name of the driver with its version.
          example: 'diihl7i 8.15.0.3'
        drivertypecode:
          description: |
            The code for the driver type. This is a single character, and is derived from drivercode.
            <br/><b>Notes:</b><ul>
            <li>This field is read only.
            It is included in the result of a GET query as information so that a client does not need to issue a subsequent query just to obtain that information.
            A client may choose to include it when updating the object with a PUT or a POST query, but the field will not be updated in the database.</li>
            </ul>
          example: 'i'
        drivertypename:
          description: |
            The name for the driver type. This is derived from drivertypecode.
            <br/><b>Notes:</b><ul>
            <li>This field is read only.
            It is included in the result of a GET query as information so that a client does not need to issue a subsequent query just to obtain that information.
            A client may choose to include it when updating the object with a PUT or a POST query, but the field will not be updated in the database.</li>
            </ul>
          example: 'Instrument'
    JsonData:
      type: object
      description: |
        JsonData
      properties:
        anyname:
          description: |
            anyname
          example: 'Any Value'
        othername:
          description: |
            othername
          example: 'Other Value'
    Kpi:
      type: object
      description: |
        The setup of an individual KPI.
      properties:
        id:
          description: |
            The internal ID of the Definition.
            Once attributed, the internal ID can no longer be changed.
            <br/><b>Notes:</b><ul>
            <li>When specified during a PUT, the field value must match the ID passed in the URL</li>
            <li>When specified during a POST, the field value forces the ID for the object, otherwise a new unique ID will be generated.
            The client must ensure that the ID, if forced, does not already exists.</li>
            </ul>
        name:
          description: |
            A descriptive name for the Definition.
            The name should be descriptive and specific enough for a user to quickly identify the
            Definition referred to by that entry.
            <br/><b>Notes:</b><ul>
            <li>Two entries may have the same name.</li>
            <li>Changing the name of an entry does not alter its identity.</li>
            <li>There is no limit to the size of a name, but this should not typically exceed 50 characters.</li>
            </ul>
          example: 'An Example Name'
        hidden:
          description: |
            Whether this Definition has been hidden.
            <br/><b>Notes:</b><ul>
            <li>An entry with its <tt>hidden</tt> property set to true will no longer be returned in lists.
            It can still be referenced explicitly.</li>
            <li>As there are no way of deleting a definition from the database (as it may be needed for historical purposes)
            setting the <tt>hidden</tt> property to true is the recommended way of <i>deleting</i> a definition.</li>
            </ul>
          example: 'false'
        shortname:
          description: |
            A name for the Definition, shorter than the standard name.
            <br/><b>Notes:</b><ul>
            <li>If a definition does not have a short name, the application should use the standard name instead.</li>
            <li>There is no limit to the size of a short name, but this should not typically exceed 15 characters.</li>
            </ul>
          example: 'Widget'
        systematicname:
          description: |
            A name for the Definition, using systematic conventions.
            <br/><b>Notes:</b><ul>
            <li>The systematic name is typically used by automated procedures to give unique identities to items.
            It is common for a systematic name to be unique only within a given context.
            For example, the systematic name of a connection is of the form <tt>CN-xxxx</tt> and is only unique within a given middleware.</li>
            <li>The systematic name is not meant to be shown to the end user.
            It can be shown to an administrator as extended properties, but a user should refrain from arbitrarily changing it if it was attributed by an automatic process.</li>
            </ul>
          example: 'CN-101'
        sortkey:
          description: |
            An arbitrary key used to sort the definitions in lists.
            <br/><b>Notes:</b><ul>
            <li>When a REST API returns multiple definitions, these are sorted first according to their Sort Key, then to their standard name.</li>
            <li>When two definitions have the same Sort Key and the same Name, their sort order is chosen arbitrarily by the backend.
            That sort order is consistent, it will be the same for each API call targeting the same version of the backend.
            However, that order can change between different versions of the backend.</li>
            <li>Sort Keys can be any arbitrary text. Multiple definitions may have the same sort key. A typical usage is to put a sortkey of 'A' for usual items and 'Z' for unusual items, so that usual items appear before unusual ones.</li>
            <li>The keys are ordered in pure lexicographical order, based on the Unicode representation of individual characters.
            Especially, all lowercase latin characters are sorted after all uppercase latin letters.
            For example <tt>a</tt> is after <tt>Z</tt>, and <tt>9</tt> is after <tt>10</tt>.
            It is recommended, but not required, for the sort key to use only digits and uppercase latin letters.</li>
            </ul>
          example: 'A'
        errorrangelow:
          description: |
            The low error threshold. Any value lower than this will be marked as in error
            <br/><b>Notes:</b><ul>
            <li>This field is duplicated in the KPI and and KPI Kind.</li>
            <li>A non-null value in the KPI overrides the value in the KPI Kind.</li>
            <li>A null value in the KPI uses the value from the KPI kind as default</li>
            </ul>
          example: '10'
        errorrangehigh:
          description: |
            The high error threshold. Any value higher than this will be marked as in error
            <br/><b>Notes:</b><ul>
            <li>This field is duplicated in the KPI and and KPI Kind.</li>
            <li>A non-null value in the KPI overrides the value in the KPI Kind.</li>
            <li>A null value in the KPI uses the value from the KPI kind as default</li>
            </ul>
          example: '200'
        warningrangelow:
          description: |
            The low warning threshold. Any value lower than this will be marked as in warning, unless it is outside the error thresholds
            <br/><b>Notes:</b><ul>
            <li>This field is duplicated in the KPI and and KPI Kind.</li>
            <li>A non-null value in the KPI overrides the value in the KPI Kind.</li>
            <li>A null value in the KPI uses the value from the KPI kind as default</li>
            </ul>
          example: '50'
        warningrangehigh:
          description: |
            The high warning threshold. Any value higher than this will be marked as in warning, unless it is outside the error thresholds
            <br/><b>Notes:</b><ul>
            <li>This field is duplicated in the KPI and and KPI Kind.</li>
            <li>A non-null value in the KPI overrides the value in the KPI Kind.</li>
            <li>A null value in the KPI uses the value from the KPI kind as default</li>
            </ul>
          example: '100'
        kind:
          description: |
            The internal id of the KPI kind of that KPI
        resource:
          description: |
            The internal id of the resource that this KPI monitors
    KpiKind:
      type: object
      description: |
        KpiKind
      properties:
        id:
          description: |
            The internal ID of the Definition.
            Once attributed, the internal ID can no longer be changed.
            <br/><b>Notes:</b><ul>
            <li>When specified during a PUT, the field value must match the ID passed in the URL</li>
            <li>When specified during a POST, the field value forces the ID for the object, otherwise a new unique ID will be generated.
            The client must ensure that the ID, if forced, does not already exists.</li>
            </ul>
        name:
          description: |
            A descriptive name for the Definition.
            The name should be descriptive and specific enough for a user to quickly identify the
            Definition referred to by that entry.
            <br/><b>Notes:</b><ul>
            <li>Two entries may have the same name.</li>
            <li>Changing the name of an entry does not alter its identity.</li>
            <li>There is no limit to the size of a name, but this should not typically exceed 50 characters.</li>
            </ul>
          example: 'An Example Name'
        hidden:
          description: |
            Whether this Definition has been hidden.
            <br/><b>Notes:</b><ul>
            <li>An entry with its <tt>hidden</tt> property set to true will no longer be returned in lists.
            It can still be referenced explicitly.</li>
            <li>As there are no way of deleting a definition from the database (as it may be needed for historical purposes)
            setting the <tt>hidden</tt> property to true is the recommended way of <i>deleting</i> a definition.</li>
            </ul>
          example: 'false'
        shortname:
          description: |
            A name for the Definition, shorter than the standard name.
            <br/><b>Notes:</b><ul>
            <li>If a definition does not have a short name, the application should use the standard name instead.</li>
            <li>There is no limit to the size of a short name, but this should not typically exceed 15 characters.</li>
            </ul>
          example: 'Widget'
        systematicname:
          description: |
            A name for the Definition, using systematic conventions.
            <br/><b>Notes:</b><ul>
            <li>The systematic name is typically used by automated procedures to give unique identities to items.
            It is common for a systematic name to be unique only within a given context.
            For example, the systematic name of a connection is of the form <tt>CN-xxxx</tt> and is only unique within a given middleware.</li>
            <li>The systematic name is not meant to be shown to the end user.
            It can be shown to an administrator as extended properties, but a user should refrain from arbitrarily changing it if it was attributed by an automatic process.</li>
            </ul>
          example: 'CN-101'
        sortkey:
          description: |
            An arbitrary key used to sort the definitions in lists.
            <br/><b>Notes:</b><ul>
            <li>When a REST API returns multiple definitions, these are sorted first according to their Sort Key, then to their standard name.</li>
            <li>When two definitions have the same Sort Key and the same Name, their sort order is chosen arbitrarily by the backend.
            That sort order is consistent, it will be the same for each API call targeting the same version of the backend.
            However, that order can change between different versions of the backend.</li>
            <li>Sort Keys can be any arbitrary text. Multiple definitions may have the same sort key. A typical usage is to put a sortkey of 'A' for usual items and 'Z' for unusual items, so that usual items appear before unusual ones.</li>
            <li>The keys are ordered in pure lexicographical order, based on the Unicode representation of individual characters.
            Especially, all lowercase latin characters are sorted after all uppercase latin letters.
            For example <tt>a</tt> is after <tt>Z</tt>, and <tt>9</tt> is after <tt>10</tt>.
            It is recommended, but not required, for the sort key to use only digits and uppercase latin letters.</li>
            </ul>
          example: 'A'
        errorrangelow:
          description: |
            The low error threshold. Any value lower than this will be marked as in error
            <br/><b>Notes:</b><ul>
            <li>This field is duplicated in the KPI and and KPI Kind.</li>
            <li>A non-null value in the KPI overrides the value in the KPI Kind.</li>
            <li>A null value in the KPI uses the value from the KPI kind as default</li>
            </ul>
          example: '10'
        errorrangehigh:
          description: |
            The high error threshold. Any value higher than this will be marked as in error
            <br/><b>Notes:</b><ul>
            <li>This field is duplicated in the KPI and and KPI Kind.</li>
            <li>A non-null value in the KPI overrides the value in the KPI Kind.</li>
            <li>A null value in the KPI uses the value from the KPI kind as default</li>
            </ul>
          example: '200'
        warningrangelow:
          description: |
            The low warning threshold. Any value lower than this will be marked as in warning, unless it is outside the error thresholds
            <br/><b>Notes:</b><ul>
            <li>This field is duplicated in the KPI and and KPI Kind.</li>
            <li>A non-null value in the KPI overrides the value in the KPI Kind.</li>
            <li>A null value in the KPI uses the value from the KPI kind as default</li>
            </ul>
          example: '50'
        warningrangehigh:
          description: |
            The high warning threshold. Any value higher than this will be marked as in warning, unless it is outside the error thresholds
            <br/><b>Notes:</b><ul>
            <li>This field is duplicated in the KPI and and KPI Kind.</li>
            <li>A non-null value in the KPI overrides the value in the KPI Kind.</li>
            <li>A null value in the KPI uses the value from the KPI kind as default</li>
            </ul>
          example: '100'
    KpiValue:
      type: object
      description: |
        KpiValue
      properties:
        id:
          description: |
            The internal UUID of the KPI
            <br/><b>Notes:</b><ul>
            <li>This field is read only.
            It is included in the result of a GET query as information so that a client does not need to issue a subsequent query just to obtain that information.
            A client may choose to include it when updating the object with a PUT or a POST query, but the field will not be updated in the database.</li>
            </ul>
          example: '3c3cf89f-6ccc-4ced-b5c9-de7e3ac276b7'
        name:
          description: |
            The name of the KPI
            <br/><b>Notes:</b><ul>
            <li>This field is read only.
            It is included in the result of a GET query as information so that a client does not need to issue a subsequent query just to obtain that information.
            A client may choose to include it when updating the object with a PUT or a POST query, but the field will not be updated in the database.</li>
            </ul>
          example: 'Architect - Send Queue'
        label:
          description: |
            A short label for the KPI
            <br/><b>Notes:</b><ul>
            <li>This field is read only.
            It is included in the result of a GET query as information so that a client does not need to issue a subsequent query just to obtain that information.
            A client may choose to include it when updating the object with a PUT or a POST query, but the field will not be updated in the database.</li>
            </ul>
          example: 'SendQ'
        value:
          description: |
            The value of the KPI
          example: '12'
        additionaldata:
          description: |
            Additional data attached to the value, in JSON format, depending on the KPI.
          example: '{ average: 23 }'
        status:
          description: |
            The status of the value, as one of the KpiStatus values
          example: '0'
        timestamp:
          description: |
            The timestamp when the value was computed.
          example: '2020-01-01T10:00:00'
        recomputepending:
          description: |
            Whether a recomputation was scheduled for the value
            <br/><b>Notes:</b><ul>
            <li>This field is read only.
            It is included in the result of a GET query as information so that a client does not need to issue a subsequent query just to obtain that information.
            A client may choose to include it when updating the object with a PUT or a POST query, but the field will not be updated in the database.</li>
            </ul>
          example: 'false'
        kindid:
          description: |
            The internal UUID for the Kpi Kind
            <br/><b>Notes:</b><ul>
            <li>This field is read only.
            It is included in the result of a GET query as information so that a client does not need to issue a subsequent query just to obtain that information.
            A client may choose to include it when updating the object with a PUT or a POST query, but the field will not be updated in the database.</li>
            </ul>
          example: '3c3cf89f-6ccc-4ced-b5c9-de7e3ac276b7'
        kindname:
          description: |
            The name of the KPI Kind
            <br/><b>Notes:</b><ul>
            <li>This field is read only.
            It is included in the result of a GET query as information so that a client does not need to issue a subsequent query just to obtain that information.
            A client may choose to include it when updating the object with a PUT or a POST query, but the field will not be updated in the database.</li>
            </ul>
          example: 'Send Queue'
        resourceid:
          description: |
            The internal ID of the resource targeted by the KPI
            <br/><b>Notes:</b><ul>
            <li>This field is read only.
            It is included in the result of a GET query as information so that a client does not need to issue a subsequent query just to obtain that information.
            A client may choose to include it when updating the object with a PUT or a POST query, but the field will not be updated in the database.</li>
            </ul>
          example: '3c3cf89f-6ccc-4ced-b5c9-de7e3ac276b7'
        issuedat:
          description: |
            The timestamp when the value was issued by the microservice.
            <br/><b>Notes:</b><ul>
            <li>This field is read only.
            It is included in the result of a GET query as information so that a client does not need to issue a subsequent query just to obtain that information.
            A client may choose to include it when updating the object with a PUT or a POST query, but the field will not be updated in the database.</li>
            </ul>
          example: '2020-01-01T10:01:00'
        refreshat:
          description: |
            The timestamp when a client should ask for a refreshed value.
            <br/><b>Notes:</b><ul>
            <li>This field is read only.
            It is included in the result of a GET query as information so that a client does not need to issue a subsequent query just to obtain that information.
            A client may choose to include it when updating the object with a PUT or a POST query, but the field will not be updated in the database.</li>
            </ul>
          example: '2020-01-01T10:02:00'
        refreshdelta:
          description: |
            The number of milliseconds between issuedat and refreshat
            <br/><b>Notes:</b><ul>
            <li>This field is read only.
            It is included in the result of a GET query as information so that a client does not need to issue a subsequent query just to obtain that information.
            A client may choose to include it when updating the object with a PUT or a POST query, but the field will not be updated in the database.</li>
            </ul>
          example: '60000'
        validuntil:
          description: |
            The timestamp when the value will cease to be valid
            <br/><b>Notes:</b><ul>
            <li>This field is read only.
            It is included in the result of a GET query as information so that a client does not need to issue a subsequent query just to obtain that information.
            A client may choose to include it when updating the object with a PUT or a POST query, but the field will not be updated in the database.</li>
            </ul>
          example: '2020-01-01T10:03:00'
        validfor:
          description: |
            The number of milliseconds between issuedat and validuntil
            <br/><b>Notes:</b><ul>
            <li>This field is read only.
            It is included in the result of a GET query as information so that a client does not need to issue a subsequent query just to obtain that information.
            A client may choose to include it when updating the object with a PUT or a POST query, but the field will not be updated in the database.</li>
            </ul>
          example: '120000'
        waitsuccess:
          description: |
            Whether recomputation of the value completed within the allowed wait time
            <br/><b>Notes:</b><ul>
            <li>This field is read only.
            It is included in the result of a GET query as information so that a client does not need to issue a subsequent query just to obtain that information.
            A client may choose to include it when updating the object with a PUT or a POST query, but the field will not be updated in the database.</li>
            <li>This field is only present when the 'wait' option is specified in GET queries</li>
            </ul>
    MetricData:
      type: object
      description: |
        MetricData
      properties:
        id:
          description: |
            The Internal ID of the metric
          type: string
          format: guid
          example: 'c9315a0a-83a9-446a-ae78-375e15bec892'
        name:
          description: |
            The name of the Metric
            <br/><b>Notes:</b><ul>
            <li>Contrary to definitions, metrics do not require a name. If no name is provided, the client should
            use a combination of the resource name and the metric kind name.</li>
            </ul>
          type: string
          example: 'Architect - Send Queue'
        shortname:
          description: |
            The short name of the Metric
          type: string
          example: 'Send'
        systematicname:
          description: |
            The systematic name of the Metric
          type: string
          example: 'Metric - Send Queue - Architect'
        sortkey:
          description: |
            The sort key of the Metric
          type: string
          example: 'ABC'
        hidden:
          description: |
            Whether the metric is hidden
          type: string
        kind:
          description: |
            The Internal ID of the metric kind
            <br/><b>Notes:</b><ul>
            <li>This field is read only.
            It is included in the result of a GET query as information so that a client does not need to issue a subsequent query just to obtain that information.
            A client may choose to include it when updating the object with a PUT or a POST query, but the field will not be updated in the database.</li>
            </ul>
          type: string
          format: guid
          example: 'cb709847-8b45-4f20-90ba-512005a6a81a'
        kindname:
          description: |
            The name of the Metric Kind
            <br/><b>Notes:</b><ul>
            <li>This field is read only.
            It is included in the result of a GET query as information so that a client does not need to issue a subsequent query just to obtain that information.
            A client may choose to include it when updating the object with a PUT or a POST query, but the field will not be updated in the database.</li>
            </ul>
          type: string
          example: 'Send Queue'
        value:
          description: |
            The value of the Metric
          type: string
          example: '12'
        timestamp:
          description: |
            The timestamp when the value was computed.
          type: string
          format: ISO-8601
          example: '2020-01-01T10:00:00'
        resource:
          description: |
            The Internal ID of the resource
            <br/><b>Notes:</b><ul>
            <li>This field is read only.
            It is included in the result of a GET query as information so that a client does not need to issue a subsequent query just to obtain that information.
            A client may choose to include it when updating the object with a PUT or a POST query, but the field will not be updated in the database.</li>
            </ul>
          type: string
          format: guid
          example: 'de77a641-f98e-4421-98b3-df1046d8bf0b'
    MetricKind:
      type: object
      description: |
        MetricKind
      properties:
        id:
          description: |
            The internal ID of the Definition.
            Once attributed, the internal ID can no longer be changed.
            <br/><b>Notes:</b><ul>
            <li>When specified during a PUT, the field value must match the ID passed in the URL</li>
            <li>When specified during a POST, the field value forces the ID for the object, otherwise a new unique ID will be generated.
            The client must ensure that the ID, if forced, does not already exists.</li>
            </ul>
        name:
          description: |
            A descriptive name for the Definition.
            The name should be descriptive and specific enough for a user to quickly identify the
            Definition referred to by that entry.
            <br/><b>Notes:</b><ul>
            <li>Two entries may have the same name.</li>
            <li>Changing the name of an entry does not alter its identity.</li>
            <li>There is no limit to the size of a name, but this should not typically exceed 50 characters.</li>
            </ul>
          example: 'An Example Name'
        hidden:
          description: |
            Whether this Definition has been hidden.
            <br/><b>Notes:</b><ul>
            <li>An entry with its <tt>hidden</tt> property set to true will no longer be returned in lists.
            It can still be referenced explicitly.</li>
            <li>As there are no way of deleting a definition from the database (as it may be needed for historical purposes)
            setting the <tt>hidden</tt> property to true is the recommended way of <i>deleting</i> a definition.</li>
            </ul>
          example: 'false'
        shortname:
          description: |
            A name for the Definition, shorter than the standard name.
            <br/><b>Notes:</b><ul>
            <li>If a definition does not have a short name, the application should use the standard name instead.</li>
            <li>There is no limit to the size of a short name, but this should not typically exceed 15 characters.</li>
            </ul>
          example: 'Widget'
        systematicname:
          description: |
            A name for the Definition, using systematic conventions.
            <br/><b>Notes:</b><ul>
            <li>The systematic name is typically used by automated procedures to give unique identities to items.
            It is common for a systematic name to be unique only within a given context.
            For example, the systematic name of a connection is of the form <tt>CN-xxxx</tt> and is only unique within a given middleware.</li>
            <li>The systematic name is not meant to be shown to the end user.
            It can be shown to an administrator as extended properties, but a user should refrain from arbitrarily changing it if it was attributed by an automatic process.</li>
            </ul>
          example: 'CN-101'
        sortkey:
          description: |
            An arbitrary key used to sort the definitions in lists.
            <br/><b>Notes:</b><ul>
            <li>When a REST API returns multiple definitions, these are sorted first according to their Sort Key, then to their standard name.</li>
            <li>When two definitions have the same Sort Key and the same Name, their sort order is chosen arbitrarily by the backend.
            That sort order is consistent, it will be the same for each API call targeting the same version of the backend.
            However, that order can change between different versions of the backend.</li>
            <li>Sort Keys can be any arbitrary text. Multiple definitions may have the same sort key. A typical usage is to put a sortkey of 'A' for usual items and 'Z' for unusual items, so that usual items appear before unusual ones.</li>
            <li>The keys are ordered in pure lexicographical order, based on the Unicode representation of individual characters.
            Especially, all lowercase latin characters are sorted after all uppercase latin letters.
            For example <tt>a</tt> is after <tt>Z</tt>, and <tt>9</tt> is after <tt>10</tt>.
            It is recommended, but not required, for the sort key to use only digits and uppercase latin letters.</li>
            </ul>
          example: 'A'
    MetricValue:
      type: object
      description: |
        MetricValue
      properties:
        name:
          description: |
            The name of the Metric
            <br/><b>Notes:</b><ul>
            <li>This field is read only.
            It is included in the result of a GET query as information so that a client does not need to issue a subsequent query just to obtain that information.
            A client may choose to include it when updating the object with a PUT or a POST query, but the field will not be updated in the database.</li>
            </ul>
          type: string
          example: 'Architect - Send Queue'
        value:
          description: |
            The value of the Metric
          type: string
          example: '12'
        timestamp:
          description: |
            The timestamp when the value was computed.
          type: string
          format: ISO-8601
          example: '2020-01-01T10:00:00'
        provider:
          description: |
            The internal ID of the process that uploads the values
          type: string
          format: guid
          example: '2e802d16-86f7-4898-b972-4c82cf411387'
        validity:
          description: |
            The number of seconds the metric should remain valid
            <br/><b>Notes:</b><ul>
            <li>The default value is 600 seconds.</li>
            </ul>
          type: number
          example: 600
        kind:
          description: |
            The internal ID of the Metric Kind
            <br/><b>Notes:</b><ul>
            <li>If the Metric Kind is already specified in the URL itself, this value is ignored. It is recommended
            then for this field to be either absent, or equal to the value on the URL.</li>
            </ul>
          type: string
          format: guid
        resource:
          description: |
            The internal ID of the Resource
            <br/><b>Notes:</b><ul>
            <li>If the resource is already specified in the URL itself, this value is ignored. It is recommended
            then for this field to be either absent, or equal to the value on the URL.</li>
            </ul>
          type: string
          format: guid
    MetricValues:
      type: object
      description: |
        MetricValues
      properties:
        provider:
          description: |
            The default value for the provider field in each individual metric
            <br/><b>Notes:</b><ul>
            <li>This value is used as default when the corresponding field is not explicitly set in the individual metrics.</li>
            </ul>
          type: string
          format: guid
          example: '2e802d16-86f7-4898-b972-4c82cf411387'
        validity:
          description: |
            The default value for the validity field in each individual metric
            <br/><b>Notes:</b><ul>
            <li>This value is used as default when the corresponding field is not explicitly set in the individual metrics.</li>
            </ul>
          type: number
          example: 600
        metrics:
          description: |
            The metric values to upload
          type: "array"
          items:
            $ref: "#/components/schemas/MetricValue"
    MiddlewareConnections:
      type: object
      description: |
        MiddlewareConnections
      properties:
        connections:
          description: |
            The list of connections.
            <br/><b>Notes:</b><ul>
            <li>This field is read only.
            It is included in the result of a GET query as information so that a client does not need to issue a subsequent query just to obtain that information.
            A client may choose to include it when updating the object with a PUT or a POST query, but the field will not be updated in the database.</li>
            </ul>
          type: "array"
          items:
            $ref: "#/components/schemas/middlewareConnection"
        totalConnectionCount:
          description: |
            The total number of connections matching the criteria.
          type: integer
          format: int64
          minimum: 0
    Resource:
      type: object
      description: |
        A resource describes a piece of equipment, people, or an organizational unit that plays a role in the
        execution of the tasks in the laboratory.
        <br>
        Each resource has a kind that further describes its role. The LabX system attaches special meaning to the predefined resource kinds,
        but the user is free to create additional custom kinds to suit the lab's needs.
      properties:
        id:
          description: |
            The internal ID of the Definition.
            Once attributed, the internal ID can no longer be changed.
            <br/><b>Notes:</b><ul>
            <li>When specified during a PUT, the field value must match the ID passed in the URL</li>
            <li>When specified during a POST, the field value forces the ID for the object, otherwise a new unique ID will be generated.
            The client must ensure that the ID, if forced, does not already exists.</li>
            </ul>
        name:
          description: |
            A descriptive name for the Definition.
            The name should be descriptive and specific enough for a user to quickly identify the
            Definition referred to by that entry.
            <br/><b>Notes:</b><ul>
            <li>Two entries may have the same name.</li>
            <li>Changing the name of an entry does not alter its identity.</li>
            <li>There is no limit to the size of a name, but this should not typically exceed 50 characters.</li>
            </ul>
          example: 'An Example Name'
        hidden:
          description: |
            Whether this Definition has been hidden.
            <br/><b>Notes:</b><ul>
            <li>An entry with its <tt>hidden</tt> property set to true will no longer be returned in lists.
            It can still be referenced explicitly.</li>
            <li>As there are no way of deleting a definition from the database (as it may be needed for historical purposes)
            setting the <tt>hidden</tt> property to true is the recommended way of <i>deleting</i> a definition.</li>
            </ul>
          example: 'false'
        shortname:
          description: |
            A name for the Definition, shorter than the standard name.
            <br/><b>Notes:</b><ul>
            <li>If a definition does not have a short name, the application should use the standard name instead.</li>
            <li>There is no limit to the size of a short name, but this should not typically exceed 15 characters.</li>
            </ul>
          example: 'Widget'
        systematicname:
          description: |
            A name for the Definition, using systematic conventions.
            <br/><b>Notes:</b><ul>
            <li>The systematic name is typically used by automated procedures to give unique identities to items.
            It is common for a systematic name to be unique only within a given context.
            For example, the systematic name of a connection is of the form <tt>CN-xxxx</tt> and is only unique within a given middleware.</li>
            <li>The systematic name is not meant to be shown to the end user.
            It can be shown to an administrator as extended properties, but a user should refrain from arbitrarily changing it if it was attributed by an automatic process.</li>
            </ul>
          example: 'CN-101'
        sortkey:
          description: |
            An arbitrary key used to sort the definitions in lists.
            <br/><b>Notes:</b><ul>
            <li>When a REST API returns multiple definitions, these are sorted first according to their Sort Key, then to their standard name.</li>
            <li>When two definitions have the same Sort Key and the same Name, their sort order is chosen arbitrarily by the backend.
            That sort order is consistent, it will be the same for each API call targeting the same version of the backend.
            However, that order can change between different versions of the backend.</li>
            <li>Sort Keys can be any arbitrary text. Multiple definitions may have the same sort key. A typical usage is to put a sortkey of 'A' for usual items and 'Z' for unusual items, so that usual items appear before unusual ones.</li>
            <li>The keys are ordered in pure lexicographical order, based on the Unicode representation of individual characters.
            Especially, all lowercase latin characters are sorted after all uppercase latin letters.
            For example <tt>a</tt> is after <tt>Z</tt>, and <tt>9</tt> is after <tt>10</tt>.
            It is recommended, but not required, for the sort key to use only digits and uppercase latin letters.</li>
            </ul>
          example: 'A'
        kind:
          description: |
            The UUID of a ResourceKind that acts as the resource kind
        hiddenreason:
          description: |
            The reason why that resource was marked as hidden.
            <br/><b>Notes:</b><ul>
            <li>This field has no meaning if the resource is not marked as hidden.</li>
            <li>A value of zero or null indicates the absence of a specific reason. This is the default value.</li>
            <li>A value of 1 indicates that the resource was hidden because the corresponding object ceased
            to exist in the real world. For example, in an IM connection, that would indicate that the connection was deleted in the IM middleware.</li>
            <li>A value of 2 indicates that the resource was hidden because the corresponding object is not marked
            as being useful in the cloud. For example, in an IM connection, that would indicate that the connection still exists, but is unchecked
            in the ETL options.</li>
            </ul>
        links:
          description: |
            The list of downwards links (ie to elements) emanating from the resource, as a list of ResourceLinkItems.
            <br/><b>Notes:</b><ul>
            <li>This field is read only.
            It is included in the result of a GET query as information so that a client does not need to issue a subsequent query just to obtain that information.
            A client may choose to include it when updating the object with a PUT or a POST query, but the field will not be updated in the database.</li>
            <li>This field is only present when the <tt>includelinks</tt> option in the query is set to <tt>true</tt></li>
            <li>The <tt>maxreportedlinks</tt> options may be used to limit the number of links returned. There is however no way
            of using pagination in links.</li>
            </ul>
          type: "array"
          items:
            $ref: "#/components/schemas/ResourceLinkItem"
        hiddenelements:
          description: |
            hiddenelements
            <br/><b>Notes:</b><ul>
            <li>This field is read only.
            It is included in the result of a GET query as information so that a client does not need to issue a subsequent query just to obtain that information.
            A client may choose to include it when updating the object with a PUT or a POST query, but the field will not be updated in the database.</li>
            <li>This field is only present when the <tt>includelinks</tt> option in the query is set to <tt>true</tt></li>
            </ul>
    ResourceKind:
      type: object
      description: |
        ResourceKind
      properties:
        id:
          description: |
            The internal ID of the Definition.
            Once attributed, the internal ID can no longer be changed.
            <br/><b>Notes:</b><ul>
            <li>When specified during a PUT, the field value must match the ID passed in the URL</li>
            <li>When specified during a POST, the field value forces the ID for the object, otherwise a new unique ID will be generated.
            The client must ensure that the ID, if forced, does not already exists.</li>
            </ul>
        name:
          description: |
            A descriptive name for the Definition.
            The name should be descriptive and specific enough for a user to quickly identify the
            Definition referred to by that entry.
            <br/><b>Notes:</b><ul>
            <li>Two entries may have the same name.</li>
            <li>Changing the name of an entry does not alter its identity.</li>
            <li>There is no limit to the size of a name, but this should not typically exceed 50 characters.</li>
            </ul>
          example: 'An Example Name'
        hidden:
          description: |
            Whether this Definition has been hidden.
            <br/><b>Notes:</b><ul>
            <li>An entry with its <tt>hidden</tt> property set to true will no longer be returned in lists.
            It can still be referenced explicitly.</li>
            <li>As there are no way of deleting a definition from the database (as it may be needed for historical purposes)
            setting the <tt>hidden</tt> property to true is the recommended way of <i>deleting</i> a definition.</li>
            </ul>
          example: 'false'
        shortname:
          description: |
            A name for the Definition, shorter than the standard name.
            <br/><b>Notes:</b><ul>
            <li>If a definition does not have a short name, the application should use the standard name instead.</li>
            <li>There is no limit to the size of a short name, but this should not typically exceed 15 characters.</li>
            </ul>
          example: 'Widget'
        systematicname:
          description: |
            A name for the Definition, using systematic conventions.
            <br/><b>Notes:</b><ul>
            <li>The systematic name is typically used by automated procedures to give unique identities to items.
            It is common for a systematic name to be unique only within a given context.
            For example, the systematic name of a connection is of the form <tt>CN-xxxx</tt> and is only unique within a given middleware.</li>
            <li>The systematic name is not meant to be shown to the end user.
            It can be shown to an administrator as extended properties, but a user should refrain from arbitrarily changing it if it was attributed by an automatic process.</li>
            </ul>
          example: 'CN-101'
        sortkey:
          description: |
            An arbitrary key used to sort the definitions in lists.
            <br/><b>Notes:</b><ul>
            <li>When a REST API returns multiple definitions, these are sorted first according to their Sort Key, then to their standard name.</li>
            <li>When two definitions have the same Sort Key and the same Name, their sort order is chosen arbitrarily by the backend.
            That sort order is consistent, it will be the same for each API call targeting the same version of the backend.
            However, that order can change between different versions of the backend.</li>
            <li>Sort Keys can be any arbitrary text. Multiple definitions may have the same sort key. A typical usage is to put a sortkey of 'A' for usual items and 'Z' for unusual items, so that usual items appear before unusual ones.</li>
            <li>The keys are ordered in pure lexicographical order, based on the Unicode representation of individual characters.
            Especially, all lowercase latin characters are sorted after all uppercase latin letters.
            For example <tt>a</tt> is after <tt>Z</tt>, and <tt>9</tt> is after <tt>10</tt>.
            It is recommended, but not required, for the sort key to use only digits and uppercase latin letters.</li>
            </ul>
          example: 'A'
    ResourceLink:
      type: object
      description: |
        A relation between a master resource and an element resource. The relation is further described with a kind.
        <br>
        Relations link resources in hierarchical dependencies and can be freely created and removed. The LabX system attaches special meaning
        to the predefined link kinds, but the user is free to create additional custom kinds to suit the lab's needs.
      properties:
        linkkind:
          description: |
            The UUID of a ResourceLinkKind that acts as the kind of relation between the master and the element
          example: 'dd22c801-f53a-4e5f-9fba-838fdc7383ab'
        master:
          description: |
            The UUID of a Resource that acts as the master (ie owner) in the relation
            <br/><b>Notes:</b><ul>
            <li>When used in a POST query, this field must either match the <tt>id</tt> parameter in the path, or be absent.</li>
            </ul>
          example: '6c496342-e424-4cd7-a211-825ad18fc028'
        element:
          description: |
            The UUID of a Resource that acts as the element (ie content) in the relation
          example: '39f739ec-f8fd-4170-bc19-71b61fc167f0'
    ResourceLinkItem:
      type: object
      description: |
        ResourceLinkItem
      properties:
        linkkind:
          description: |
            The GUID of the Link Kind.
        element:
          description: |
            The GUID of the element
        elementkind:
          description: |
            The GUID of the resourcekind of the element
        linkkindname:
          description: |
            The name of the Link Kind
        elementname:
          description: |
            The name of the element
        elementhidden:
          description: |
            Whether the element is hidden
        elementhiddenreason:
          description: |
            The reason why the element is hidden
        linkhidden:
          description: |
            Whether the link itself is hidden
    ResourceLinkKind:
      type: object
      description: |
        ResourceLinkKind
      properties:
        id:
          description: |
            The internal ID of the Definition.
            Once attributed, the internal ID can no longer be changed.
            <br/><b>Notes:</b><ul>
            <li>When specified during a PUT, the field value must match the ID passed in the URL</li>
            <li>When specified during a POST, the field value forces the ID for the object, otherwise a new unique ID will be generated.
            The client must ensure that the ID, if forced, does not already exists.</li>
            </ul>
        name:
          description: |
            A descriptive name for the Definition.
            The name should be descriptive and specific enough for a user to quickly identify the
            Definition referred to by that entry.
            <br/><b>Notes:</b><ul>
            <li>Two entries may have the same name.</li>
            <li>Changing the name of an entry does not alter its identity.</li>
            <li>There is no limit to the size of a name, but this should not typically exceed 50 characters.</li>
            </ul>
          example: 'An Example Name'
        hidden:
          description: |
            Whether this Definition has been hidden.
            <br/><b>Notes:</b><ul>
            <li>An entry with its <tt>hidden</tt> property set to true will no longer be returned in lists.
            It can still be referenced explicitly.</li>
            <li>As there are no way of deleting a definition from the database (as it may be needed for historical purposes)
            setting the <tt>hidden</tt> property to true is the recommended way of <i>deleting</i> a definition.</li>
            </ul>
          example: 'false'
        shortname:
          description: |
            A name for the Definition, shorter than the standard name.
            <br/><b>Notes:</b><ul>
            <li>If a definition does not have a short name, the application should use the standard name instead.</li>
            <li>There is no limit to the size of a short name, but this should not typically exceed 15 characters.</li>
            </ul>
          example: 'Widget'
        systematicname:
          description: |
            A name for the Definition, using systematic conventions.
            <br/><b>Notes:</b><ul>
            <li>The systematic name is typically used by automated procedures to give unique identities to items.
            It is common for a systematic name to be unique only within a given context.
            For example, the systematic name of a connection is of the form <tt>CN-xxxx</tt> and is only unique within a given middleware.</li>
            <li>The systematic name is not meant to be shown to the end user.
            It can be shown to an administrator as extended properties, but a user should refrain from arbitrarily changing it if it was attributed by an automatic process.</li>
            </ul>
          example: 'CN-101'
        sortkey:
          description: |
            An arbitrary key used to sort the definitions in lists.
            <br/><b>Notes:</b><ul>
            <li>When a REST API returns multiple definitions, these are sorted first according to their Sort Key, then to their standard name.</li>
            <li>When two definitions have the same Sort Key and the same Name, their sort order is chosen arbitrarily by the backend.
            That sort order is consistent, it will be the same for each API call targeting the same version of the backend.
            However, that order can change between different versions of the backend.</li>
            <li>Sort Keys can be any arbitrary text. Multiple definitions may have the same sort key. A typical usage is to put a sortkey of 'A' for usual items and 'Z' for unusual items, so that usual items appear before unusual ones.</li>
            <li>The keys are ordered in pure lexicographical order, based on the Unicode representation of individual characters.
            Especially, all lowercase latin characters are sorted after all uppercase latin letters.
            For example <tt>a</tt> is after <tt>Z</tt>, and <tt>9</tt> is after <tt>10</tt>.
            It is recommended, but not required, for the sort key to use only digits and uppercase latin letters.</li>
            </ul>
          example: 'A'
    ResourceProperty:
      type: object
      description: |
        ResourceProperty
      properties:
        resource:
          description: |
            The GUID of the resource associated with the property
            <br/><b>Notes:</b><ul>
            <li>In the case a hierarchical search was performed, this is the GUID of the resource that is actually associated with the property.
            This may be the resource corresponding to the query, or the closest parent that has a value for that property.</li>
            </ul>
          example: 'ad6f38a3-540f-4dde-8d09-2fdbae15af04'
        property:
          description: |
            The GUID of the property kind
          example: '06d6e916-660f-4eff-8634-932128eae5e3'
        value:
          description: |
            The value of the property. This can be a simple value such as a string or a number, or a composite value (JSON).
          example: 'Value of the property'
    ResourcePropertyKind:
      type: object
      description: |
        The description of a Resource Property. The property kind is mainly used to give names to properties.
      properties:
        id:
          description: |
            The internal ID of the Definition.
            Once attributed, the internal ID can no longer be changed.
            <br/><b>Notes:</b><ul>
            <li>When specified during a PUT, the field value must match the ID passed in the URL</li>
            <li>When specified during a POST, the field value forces the ID for the object, otherwise a new unique ID will be generated.
            The client must ensure that the ID, if forced, does not already exists.</li>
            </ul>
        name:
          description: |
            A descriptive name for the Definition.
            The name should be descriptive and specific enough for a user to quickly identify the
            Definition referred to by that entry.
            <br/><b>Notes:</b><ul>
            <li>Two entries may have the same name.</li>
            <li>Changing the name of an entry does not alter its identity.</li>
            <li>There is no limit to the size of a name, but this should not typically exceed 50 characters.</li>
            </ul>
          example: 'An Example Name'
        hidden:
          description: |
            Whether this Definition has been hidden.
            <br/><b>Notes:</b><ul>
            <li>An entry with its <tt>hidden</tt> property set to true will no longer be returned in lists.
            It can still be referenced explicitly.</li>
            <li>As there are no way of deleting a definition from the database (as it may be needed for historical purposes)
            setting the <tt>hidden</tt> property to true is the recommended way of <i>deleting</i> a definition.</li>
            </ul>
          example: 'false'
        shortname:
          description: |
            A name for the Definition, shorter than the standard name.
            <br/><b>Notes:</b><ul>
            <li>If a definition does not have a short name, the application should use the standard name instead.</li>
            <li>There is no limit to the size of a short name, but this should not typically exceed 15 characters.</li>
            </ul>
          example: 'Widget'
        systematicname:
          description: |
            A name for the Definition, using systematic conventions.
            <br/><b>Notes:</b><ul>
            <li>The systematic name is typically used by automated procedures to give unique identities to items.
            It is common for a systematic name to be unique only within a given context.
            For example, the systematic name of a connection is of the form <tt>CN-xxxx</tt> and is only unique within a given middleware.</li>
            <li>The systematic name is not meant to be shown to the end user.
            It can be shown to an administrator as extended properties, but a user should refrain from arbitrarily changing it if it was attributed by an automatic process.</li>
            </ul>
          example: 'CN-101'
        sortkey:
          description: |
            An arbitrary key used to sort the definitions in lists.
            <br/><b>Notes:</b><ul>
            <li>When a REST API returns multiple definitions, these are sorted first according to their Sort Key, then to their standard name.</li>
            <li>When two definitions have the same Sort Key and the same Name, their sort order is chosen arbitrarily by the backend.
            That sort order is consistent, it will be the same for each API call targeting the same version of the backend.
            However, that order can change between different versions of the backend.</li>
            <li>Sort Keys can be any arbitrary text. Multiple definitions may have the same sort key. A typical usage is to put a sortkey of 'A' for usual items and 'Z' for unusual items, so that usual items appear before unusual ones.</li>
            <li>The keys are ordered in pure lexicographical order, based on the Unicode representation of individual characters.
            Especially, all lowercase latin characters are sorted after all uppercase latin letters.
            For example <tt>a</tt> is after <tt>Z</tt>, and <tt>9</tt> is after <tt>10</tt>.
            It is recommended, but not required, for the sort key to use only digits and uppercase latin letters.</li>
            </ul>
          example: 'A'
    SpecimenEventKind:
      type: object
      description: |
        SpecimenEventKind
      properties:
        id:
          description: |
            The internal ID of the Definition.
            Once attributed, the internal ID can no longer be changed.
            <br/><b>Notes:</b><ul>
            <li>When specified during a PUT, the field value must match the ID passed in the URL</li>
            <li>When specified during a POST, the field value forces the ID for the object, otherwise a new unique ID will be generated.
            The client must ensure that the ID, if forced, does not already exists.</li>
            </ul>
        name:
          description: |
            A descriptive name for the Definition.
            The name should be descriptive and specific enough for a user to quickly identify the
            Definition referred to by that entry.
            <br/><b>Notes:</b><ul>
            <li>Two entries may have the same name.</li>
            <li>Changing the name of an entry does not alter its identity.</li>
            <li>There is no limit to the size of a name, but this should not typically exceed 50 characters.</li>
            </ul>
          example: 'An Example Name'
        hidden:
          description: |
            Whether this Definition has been hidden.
            <br/><b>Notes:</b><ul>
            <li>An entry with its <tt>hidden</tt> property set to true will no longer be returned in lists.
            It can still be referenced explicitly.</li>
            <li>As there are no way of deleting a definition from the database (as it may be needed for historical purposes)
            setting the <tt>hidden</tt> property to true is the recommended way of <i>deleting</i> a definition.</li>
            </ul>
          example: 'false'
        shortname:
          description: |
            A name for the Definition, shorter than the standard name.
            <br/><b>Notes:</b><ul>
            <li>If a definition does not have a short name, the application should use the standard name instead.</li>
            <li>There is no limit to the size of a short name, but this should not typically exceed 15 characters.</li>
            </ul>
          example: 'Widget'
        systematicname:
          description: |
            A name for the Definition, using systematic conventions.
            <br/><b>Notes:</b><ul>
            <li>The systematic name is typically used by automated procedures to give unique identities to items.
            It is common for a systematic name to be unique only within a given context.
            For example, the systematic name of a connection is of the form <tt>CN-xxxx</tt> and is only unique within a given middleware.</li>
            <li>The systematic name is not meant to be shown to the end user.
            It can be shown to an administrator as extended properties, but a user should refrain from arbitrarily changing it if it was attributed by an automatic process.</li>
            </ul>
          example: 'CN-101'
        sortkey:
          description: |
            An arbitrary key used to sort the definitions in lists.
            <br/><b>Notes:</b><ul>
            <li>When a REST API returns multiple definitions, these are sorted first according to their Sort Key, then to their standard name.</li>
            <li>When two definitions have the same Sort Key and the same Name, their sort order is chosen arbitrarily by the backend.
            That sort order is consistent, it will be the same for each API call targeting the same version of the backend.
            However, that order can change between different versions of the backend.</li>
            <li>Sort Keys can be any arbitrary text. Multiple definitions may have the same sort key. A typical usage is to put a sortkey of 'A' for usual items and 'Z' for unusual items, so that usual items appear before unusual ones.</li>
            <li>The keys are ordered in pure lexicographical order, based on the Unicode representation of individual characters.
            Especially, all lowercase latin characters are sorted after all uppercase latin letters.
            For example <tt>a</tt> is after <tt>Z</tt>, and <tt>9</tt> is after <tt>10</tt>.
            It is recommended, but not required, for the sort key to use only digits and uppercase latin letters.</li>
            </ul>
          example: 'A'
    SpecimenWorkflowKind:
      type: object
      description: |
        An event is used as base for defining workflows. Workflows and TATs are curretnly experimental.
      properties:
        id:
          description: |
            The internal ID of the Definition.
            Once attributed, the internal ID can no longer be changed.
            <br/><b>Notes:</b><ul>
            <li>When specified during a PUT, the field value must match the ID passed in the URL</li>
            <li>When specified during a POST, the field value forces the ID for the object, otherwise a new unique ID will be generated.
            The client must ensure that the ID, if forced, does not already exists.</li>
            </ul>
        name:
          description: |
            A descriptive name for the Definition.
            The name should be descriptive and specific enough for a user to quickly identify the
            Definition referred to by that entry.
            <br/><b>Notes:</b><ul>
            <li>Two entries may have the same name.</li>
            <li>Changing the name of an entry does not alter its identity.</li>
            <li>There is no limit to the size of a name, but this should not typically exceed 50 characters.</li>
            </ul>
          example: 'An Example Name'
        hidden:
          description: |
            Whether this Definition has been hidden.
            <br/><b>Notes:</b><ul>
            <li>An entry with its <tt>hidden</tt> property set to true will no longer be returned in lists.
            It can still be referenced explicitly.</li>
            <li>As there are no way of deleting a definition from the database (as it may be needed for historical purposes)
            setting the <tt>hidden</tt> property to true is the recommended way of <i>deleting</i> a definition.</li>
            </ul>
          example: 'false'
        shortname:
          description: |
            A name for the Definition, shorter than the standard name.
            <br/><b>Notes:</b><ul>
            <li>If a definition does not have a short name, the application should use the standard name instead.</li>
            <li>There is no limit to the size of a short name, but this should not typically exceed 15 characters.</li>
            </ul>
          example: 'Widget'
        systematicname:
          description: |
            A name for the Definition, using systematic conventions.
            <br/><b>Notes:</b><ul>
            <li>The systematic name is typically used by automated procedures to give unique identities to items.
            It is common for a systematic name to be unique only within a given context.
            For example, the systematic name of a connection is of the form <tt>CN-xxxx</tt> and is only unique within a given middleware.</li>
            <li>The systematic name is not meant to be shown to the end user.
            It can be shown to an administrator as extended properties, but a user should refrain from arbitrarily changing it if it was attributed by an automatic process.</li>
            </ul>
          example: 'CN-101'
        sortkey:
          description: |
            An arbitrary key used to sort the definitions in lists.
            <br/><b>Notes:</b><ul>
            <li>When a REST API returns multiple definitions, these are sorted first according to their Sort Key, then to their standard name.</li>
            <li>When two definitions have the same Sort Key and the same Name, their sort order is chosen arbitrarily by the backend.
            That sort order is consistent, it will be the same for each API call targeting the same version of the backend.
            However, that order can change between different versions of the backend.</li>
            <li>Sort Keys can be any arbitrary text. Multiple definitions may have the same sort key. A typical usage is to put a sortkey of 'A' for usual items and 'Z' for unusual items, so that usual items appear before unusual ones.</li>
            <li>The keys are ordered in pure lexicographical order, based on the Unicode representation of individual characters.
            Especially, all lowercase latin characters are sorted after all uppercase latin letters.
            For example <tt>a</tt> is after <tt>Z</tt>, and <tt>9</tt> is after <tt>10</tt>.
            It is recommended, but not required, for the sort key to use only digits and uppercase latin letters.</li>
            </ul>
          example: 'A'
    middlewareConnection:
      type: object
      description: |
        Additional, IM-specific information about a ressource that acts as a connection.
      properties:
        id:
          description: |
            The internal ID of the connection object.
            <br/><b>Notes:</b><ul>
            <li>This field is read only.
            It is included in the result of a GET query as information so that a client does not need to issue a subsequent query just to obtain that information.
            A client may choose to include it when updating the object with a PUT or a POST query, but the field will not be updated in the database.</li>
            </ul>
          type: string
          format: guid
          example: 'd461286e-0897-459e-bb7e-949f2dfdaa5b'
        name:
          description: |
            The name of the connection. This field is retrieved from the name of the corresponding resource.
          type: string
        systematicname:
          description: |
            The code of the connection, typically in the form CN-xxxx
            <br/><b>Notes:</b><ul>
            <li>This field is retrieved from the systematic name of the corresponding resource.</li>
            </ul>
          type: string
        hidden:
          description: |
            Whether the connection is hidden.
          type: boolean
        systemconnection:
          description: |
            Whether this is a system connection.
            <br/><b>Notes:</b><ul>
            <li>The value is derived from instrumentnumber</li>
            </ul>
          type: boolean
        sitename:
          description: |
            The name of the site.
            <br/><b>Notes:</b><ul>
            <li>This field is ignored in a PUT if no `sitecode` is given.</li>
            <li>If this field is not specified, it defaults to `sitecode`.</li>
            </ul>
          type: string
        locationname:
          description: |
            The name of the location.
            <br/><b>Notes:</b><ul>
            <li>This field is ignored in a PUT if no `locationcode` is given.</li>
            <li>If the field is not specified, it defaults to `locationcode`.</li>
            </ul>
          type: string
        drivercode:
          description: |
            The code for the driver.
          type: string
          example: 'diihl7i'
        drivertypename:
          description: |
            The name for the driver type. This is derived from drivertypecode.
          type: string
